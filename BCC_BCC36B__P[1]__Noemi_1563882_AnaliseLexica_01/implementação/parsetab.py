
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SOMA SUB MULT DIVISAO IGUAL VIRGULA ATRIBUICAO MENOR MAIOR MENOR_IGUAL MAIOR_IGUAL ABRE_PAR FECHA_PAR DOIS_PONTOS ABRE_COL FECHA_COL E_LOGICO OU_LOGICO NEGACAO ID NOVA_LINHA COMENTARIO NOTACAO_CIENTIFICA SENAO ENTAO INTEIRO SE RETORNA FIM REPITA ESCREVA ATE FLUTUANTE LEIA\n        programa : lista_declaracoes\n                     \n        lista_declaracoes : lista_declaracoes declaracao\n                           | declaracao\n        \n        declaracao : declaracao_variaveis\n                    | inicializacao_variaveis\n                    | declaracao_funcao\n        \n        declaracao_variaveis : tipo DOIS_PONTOS lista_variaveis\n        \n        inicializacao_variaveis : atribuicao\n        \n        lista_variaveis : var VIRGULA lista_variaveis\n                        | var\n        \n        var : ID\n            | ID indice\n        \n        indice : indice ABRE_COL expressao FECHA_COL\n                | ABRE_COL expressao FECHA_COL\n        \n        tipo : INTEIRO\n        \n        tipo : FLUTUANTE\n        \n        declaracao_funcao : tipo cabecalho\n                        | cabecalho\n        \n        cabecalho : ID ABRE_PAR lista_parametros FECHA_PAR corpo FIM\n        \n        lista_parametros : lista_parametros VIRGULA lista_parametros\n                            | parametro\n                            | vazio\n        \n        parametro : tipo DOIS_PONTOS ID\n        \n        parametro : parametro ABRE_COL FECHA_COL\n        \n        corpo : corpo acao\n                | vazio\n        \n        acao : expressao\n                    | declaracao_variaveis\n                    | se\n                    | repita\n                    | leia\n                    | escreva\n                    | retorna\n                    | error\n\n        \n            se : SE expressao ENTAO corpo FIM\n                | SE expressao ENTAO corpo SENAO corpo FIM\n        \n            repita : REPITA corpo ATE expressao\n        \n            atribuicao : var ATRIBUICAO expressao\n        \n            leia : LEIA ABRE_PAR ID FECHA_PAR\n        \n            escreva : ESCREVA ABRE_PAR expressao FECHA_PAR\n        \n            retorna : RETORNA ABRE_PAR expressao FECHA_PAR\n        \n            expressao : expressao_simples\n                        | atribuicao\n        \n            expressao_simples : expressao_aditiva\n                                | expressao_simples operador_relacional expressao_aditiva\n        \n            expressao_aditiva : expressao_multiplicativa\n                                | expressao_aditiva operador_multiplicacao expressao_unaria\n        \n           expressao_multiplicativa : expressao_unaria\n                           | expressao_multiplicativa operador_multiplicacao expressao_unaria\n\n        \n\n            expressao_unaria : fator\n                            | operador_soma fator\n\n        \n            operador_relacional : MENOR\n                                | MAIOR\n                                | IGUAL\n                                | MENOR_IGUAL\n                                | MAIOR_IGUAL\n                                | NEGACAO\n        \n            operador_soma : SOMA\n                    | SUB\n        \n            operador_multiplicacao : MULT\n                                    | DIVISAO\n        \n            fator : ABRE_COL  expressao FECHA_COL\n                    | var\n                    | chamada_funcao\n                    | numero\n        \n            numero : INTEIRO\n                    | FLUTUANTE\n        \n            chamada_funcao : ID ABRE_PAR lista_argumentos FECHA_PAR\n        \n            lista_argumentos : lista_argumentos VIRGULA expressao\n                            | expressao\n                            | vazio\n        \n            vazio :\n        '
    
_lr_action_items = {'VIRGULA':([19,20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,42,43,45,51,52,62,66,69,70,71,72,73,74,75,76,78,79,80,83,85,104,],[-72,-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,63,-11,-22,-21,66,-63,-51,-72,-72,-14,-47,-62,-45,-49,84,-70,-71,-24,-23,66,-13,-68,-69,]),'SOMA':([15,20,21,22,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,67,69,70,71,72,73,77,81,82,83,84,85,86,88,89,90,91,92,93,94,97,98,101,102,103,106,108,109,110,111,115,116,117,118,119,120,121,122,123,],[23,-12,23,-43,-44,-38,-67,-63,-64,23,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,23,-60,-61,23,-63,-51,-55,-56,-57,23,-53,-54,-52,23,23,-72,-14,-47,-62,-45,-49,-9,23,-26,-13,23,-68,23,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,23,23,23,-72,23,23,-37,-39,-41,-40,-35,-72,23,-36,]),'RETORNA':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,96,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,96,-72,96,-37,-39,-41,-40,-35,-72,96,-36,]),'SE':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,86,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,86,-72,86,-37,-39,-41,-40,-35,-72,86,-36,]),'FIM':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,93,94,97,98,101,102,103,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,87,-26,-13,-68,-31,-25,-28,-33,-34,-29,-27,-67,-30,-32,-66,-72,120,-37,-39,-41,-40,-35,-72,123,-36,]),'FLUTUANTE':([0,1,3,6,7,8,10,11,14,15,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,73,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,102,103,106,108,109,110,111,115,116,117,118,119,120,121,122,123,],[2,-8,2,-4,-5,-6,-18,-3,-2,26,-17,2,-12,26,-43,-58,-44,-38,-67,-63,26,-64,-59,26,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,26,-60,-61,26,-63,-51,-55,-56,-57,26,-53,-54,-52,26,26,2,-72,-14,-47,-62,-45,-49,-9,98,-26,-13,26,-68,26,-19,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,98,26,26,-72,26,98,-37,-39,-41,-40,-35,-72,98,-36,]),'MAIOR_IGUAL':([20,24,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,-44,-67,-63,-64,-65,55,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,-67,-66,]),'ENTAO':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,105,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,110,]),'ESCREVA':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,100,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,100,-72,100,-37,-39,-41,-40,-35,-72,100,-36,]),'MULT':([20,24,26,27,29,32,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,48,-67,-63,-64,-65,48,-50,-11,-66,-48,-63,-51,-14,-47,-62,48,-49,-13,-68,-67,-66,]),'IGUAL':([20,24,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,-44,-67,-63,-64,-65,59,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,-67,-66,]),'SENAO':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,69,70,71,72,73,77,82,83,85,88,89,90,91,93,94,97,98,101,102,103,110,115,116,117,118,119,120,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-14,-47,-62,-45,-49,-9,-26,-13,-68,-31,-25,-28,-33,-34,-29,-27,-67,-30,-32,-66,-72,121,-37,-39,-41,-40,-35,-36,]),'ATRIBUICAO':([4,12,20,27,36,69,83,],[15,-11,-12,15,-11,-14,-13,]),'MENOR_IGUAL':([20,24,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,-44,-67,-63,-64,-65,54,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,-67,-66,]),'ABRE_PAR':([12,18,36,95,96,100,],[19,19,62,107,108,109,]),'NEGACAO':([20,24,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,-44,-67,-63,-64,-65,56,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,-67,-66,]),'REPITA':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,92,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,92,-72,92,-37,-39,-41,-40,-35,-72,92,-36,]),'DOIS_PONTOS':([2,5,13,44,98,99,103,],[-16,16,-15,65,-16,16,-15,]),'ABRE_COL':([12,15,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,67,69,70,71,72,73,77,78,79,81,82,83,84,85,86,88,89,90,91,92,93,94,97,98,101,102,103,106,108,109,110,111,115,116,117,118,119,120,121,122,123,],[21,31,46,31,-43,-58,-44,-38,-67,-63,31,-64,-59,31,-65,-42,-46,-50,21,-66,-48,-10,21,-7,64,31,-60,-61,31,-63,-51,-55,-56,-57,31,-53,-54,-52,31,31,-72,-14,-47,-62,-45,-49,-9,-24,-23,31,-26,-13,31,-68,31,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,31,31,31,-72,31,31,-37,-39,-41,-40,-35,-72,31,-36,]),'error':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,93,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,93,-72,93,-37,-39,-41,-40,-35,-72,93,-36,]),'FECHA_COL':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,47,51,52,53,64,68,69,70,71,72,73,83,85,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,69,-63,-51,71,78,83,-14,-47,-62,-45,-49,-13,-68,]),'ATE':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,69,70,71,72,73,77,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,116,117,118,119,120,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-14,-47,-62,-45,-49,-9,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,111,-37,-39,-41,-40,-35,-36,]),'$end':([1,3,6,7,8,9,10,11,14,17,20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,69,70,71,72,73,77,83,85,87,],[-8,-1,-4,-5,-6,0,-18,-3,-2,-17,-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-14,-47,-62,-45,-49,-9,-13,-68,-19,]),'SUB':([15,20,21,22,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,67,69,70,71,72,73,77,81,82,83,84,85,86,88,89,90,91,92,93,94,97,98,101,102,103,106,108,109,110,111,115,116,117,118,119,120,121,122,123,],[30,-12,30,-43,-44,-38,-67,-63,-64,30,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,30,-60,-61,30,-63,-51,-55,-56,-57,30,-53,-54,-52,30,30,-72,-14,-47,-62,-45,-49,-9,30,-26,-13,30,-68,30,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,30,30,30,-72,30,30,-37,-39,-41,-40,-35,-72,30,-36,]),'MAIOR':([20,24,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,-44,-67,-63,-64,-65,58,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,-67,-66,]),'ID':([0,1,2,3,5,6,7,8,10,11,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,65,67,69,70,71,72,73,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,121,122,123,],[12,-8,-16,12,18,-4,-5,-6,-18,-3,-15,-2,36,40,-17,-12,36,-43,-58,-44,-38,-67,-63,36,-64,-59,36,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,36,-60,-61,36,-63,-51,-55,-56,-57,36,-53,-54,-52,36,36,40,79,-72,-14,-47,-62,-45,-49,-9,36,-26,-13,36,-68,36,-19,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,36,112,36,36,-72,36,36,-37,-39,-41,-40,-35,-72,36,-36,]),'DIVISAO':([20,24,26,27,29,32,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,49,-67,-63,-64,-65,49,-50,-11,-66,-48,-63,-51,-14,-47,-62,49,-49,-13,-68,-67,-66,]),'MENOR':([20,24,26,27,29,32,33,34,35,36,37,38,51,52,69,70,71,72,73,83,85,98,103,],[-12,-44,-67,-63,-64,-65,60,-46,-50,-11,-66,-48,-63,-51,-14,-47,-62,-45,-49,-13,-68,-67,-66,]),'INTEIRO':([0,1,3,6,7,8,10,11,14,15,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,46,48,49,50,51,52,54,55,56,57,58,59,60,61,62,66,67,69,70,71,72,73,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,102,103,106,108,109,110,111,115,116,117,118,119,120,121,122,123,],[13,-8,13,-4,-5,-6,-18,-3,-2,37,-17,13,-12,37,-43,-58,-44,-38,-67,-63,37,-64,-59,37,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,37,-60,-61,37,-63,-51,-55,-56,-57,37,-53,-54,-52,37,37,13,-72,-14,-47,-62,-45,-49,-9,103,-26,-13,37,-68,37,-19,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,103,37,37,-72,37,103,-37,-39,-41,-40,-35,-72,103,-36,]),'LEIA':([20,22,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,51,52,67,69,70,71,72,73,77,81,82,83,85,88,89,90,91,92,93,94,97,98,101,102,103,106,110,115,116,117,118,119,120,121,122,123,],[-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-10,-11,-7,-63,-51,-72,-14,-47,-62,-45,-49,-9,95,-26,-13,-68,-31,-25,-28,-33,-72,-34,-29,-27,-67,-30,-32,-66,95,-72,95,-37,-39,-41,-40,-35,-72,95,-36,]),'FECHA_PAR':([19,20,22,24,25,26,27,29,32,33,34,35,36,37,38,42,43,45,51,52,62,66,69,70,71,72,73,74,75,76,78,79,80,83,85,104,112,113,114,],[-72,-12,-43,-44,-38,-67,-63,-64,-65,-42,-46,-50,-11,-66,-48,-22,-21,67,-63,-51,-72,-72,-14,-47,-62,-45,-49,85,-70,-71,-24,-23,-20,-13,-68,-69,117,118,119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'atribuicao':([0,3,15,21,31,46,62,81,84,86,106,108,109,111,115,122,],[1,1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'lista_argumentos':([62,],[74,]),'operador_multiplicacao':([24,34,72,],[50,61,50,]),'se':([81,106,115,122,],[94,94,94,94,]),'expressao_aditiva':([15,21,31,46,57,62,81,84,86,106,108,109,111,115,122,],[24,24,24,24,72,24,24,24,24,24,24,24,24,24,24,]),'expressao':([15,21,31,46,62,81,84,86,106,108,109,111,115,122,],[25,47,53,68,75,97,104,105,97,113,114,116,97,97,]),'lista_declaracoes':([0,],[3,]),'leia':([81,106,115,122,],[88,88,88,88,]),'acao':([81,106,115,122,],[89,89,89,89,]),'var':([0,3,15,16,21,28,31,46,50,57,61,62,63,81,84,86,106,108,109,111,115,122,],[4,4,27,39,27,51,27,27,51,51,51,27,39,27,27,27,27,27,27,27,27,27,]),'cabecalho':([0,3,5,],[10,10,17,]),'escreva':([81,106,115,122,],[102,102,102,102,]),'corpo':([67,92,110,121,],[81,106,115,122,]),'lista_variaveis':([16,63,],[41,77,]),'declaracao_variaveis':([0,3,81,106,115,122,],[6,6,90,90,90,90,]),'declaracao':([0,3,],[11,14,]),'retorna':([81,106,115,122,],[91,91,91,91,]),'operador_soma':([15,21,31,46,50,57,61,62,81,84,86,106,108,109,111,115,122,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'chamada_funcao':([15,21,28,31,46,50,57,61,62,81,84,86,106,108,109,111,115,122,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'inicializacao_variaveis':([0,3,],[7,7,]),'vazio':([19,62,66,67,92,110,121,],[42,76,42,82,82,82,82,]),'declaracao_funcao':([0,3,],[8,8,]),'numero':([15,21,28,31,46,50,57,61,62,81,84,86,106,108,109,111,115,122,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'expressao_simples':([15,21,31,46,62,81,84,86,106,108,109,111,115,122,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expressao_multiplicativa':([15,21,31,46,57,62,81,84,86,106,108,109,111,115,122,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'tipo':([0,3,19,66,81,106,115,122,],[5,5,44,44,99,99,99,99,]),'operador_relacional':([33,],[57,]),'fator':([15,21,28,31,46,50,57,61,62,81,84,86,106,108,109,111,115,122,],[35,35,52,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'repita':([81,106,115,122,],[101,101,101,101,]),'programa':([0,],[9,]),'lista_parametros':([19,66,],[45,80,]),'indice':([12,36,40,],[20,20,20,]),'parametro':([19,66,],[43,43,]),'expressao_unaria':([15,21,31,46,50,57,61,62,81,84,86,106,108,109,111,115,122,],[38,38,38,38,70,38,73,38,38,38,38,38,38,38,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaracoes','programa',1,'p_programa','syntax.py',29),
  ('lista_declaracoes -> lista_declaracoes declaracao','lista_declaracoes',2,'p_lista_declaracoes','syntax.py',35),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista_declaracoes','syntax.py',36),
  ('declaracao -> declaracao_variaveis','declaracao',1,'p_declaracao','syntax.py',45),
  ('declaracao -> inicializacao_variaveis','declaracao',1,'p_declaracao','syntax.py',46),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','syntax.py',47),
  ('declaracao_variaveis -> tipo DOIS_PONTOS lista_variaveis','declaracao_variaveis',3,'p_declaracao_variaveis','syntax.py',53),
  ('inicializacao_variaveis -> atribuicao','inicializacao_variaveis',1,'p_inicializacao_variaveis','syntax.py',59),
  ('lista_variaveis -> var VIRGULA lista_variaveis','lista_variaveis',3,'p_lista_variaveis','syntax.py',65),
  ('lista_variaveis -> var','lista_variaveis',1,'p_lista_variaveis','syntax.py',66),
  ('var -> ID','var',1,'p_var','syntax.py',75),
  ('var -> ID indice','var',2,'p_var','syntax.py',76),
  ('indice -> indice ABRE_COL expressao FECHA_COL','indice',4,'p_indice','syntax.py',85),
  ('indice -> ABRE_COL expressao FECHA_COL','indice',3,'p_indice','syntax.py',86),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','syntax.py',95),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo2','syntax.py',101),
  ('declaracao_funcao -> tipo cabecalho','declaracao_funcao',2,'p_declaracao_funcao','syntax.py',107),
  ('declaracao_funcao -> cabecalho','declaracao_funcao',1,'p_declaracao_funcao','syntax.py',108),
  ('cabecalho -> ID ABRE_PAR lista_parametros FECHA_PAR corpo FIM','cabecalho',6,'p_cabecalho','syntax.py',117),
  ('lista_parametros -> lista_parametros VIRGULA lista_parametros','lista_parametros',3,'p_lista_parametros','syntax.py',123),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','syntax.py',124),
  ('lista_parametros -> vazio','lista_parametros',1,'p_lista_parametros','syntax.py',125),
  ('parametro -> tipo DOIS_PONTOS ID','parametro',3,'p_parametro1','syntax.py',134),
  ('parametro -> parametro ABRE_COL FECHA_COL','parametro',3,'p_parametro2','syntax.py',140),
  ('corpo -> corpo acao','corpo',2,'p_corpo','syntax.py',146),
  ('corpo -> vazio','corpo',1,'p_corpo','syntax.py',147),
  ('acao -> expressao','acao',1,'p_acao','syntax.py',156),
  ('acao -> declaracao_variaveis','acao',1,'p_acao','syntax.py',157),
  ('acao -> se','acao',1,'p_acao','syntax.py',158),
  ('acao -> repita','acao',1,'p_acao','syntax.py',159),
  ('acao -> leia','acao',1,'p_acao','syntax.py',160),
  ('acao -> escreva','acao',1,'p_acao','syntax.py',161),
  ('acao -> retorna','acao',1,'p_acao','syntax.py',162),
  ('acao -> error','acao',1,'p_acao','syntax.py',163),
  ('se -> SE expressao ENTAO corpo FIM','se',5,'p_se','syntax.py',170),
  ('se -> SE expressao ENTAO corpo SENAO corpo FIM','se',7,'p_se','syntax.py',171),
  ('repita -> REPITA corpo ATE expressao','repita',4,'p_repita','syntax.py',180),
  ('atribuicao -> var ATRIBUICAO expressao','atribuicao',3,'p_atribuicao','syntax.py',186),
  ('leia -> LEIA ABRE_PAR ID FECHA_PAR','leia',4,'p_leia','syntax.py',193),
  ('escreva -> ESCREVA ABRE_PAR expressao FECHA_PAR','escreva',4,'p_escreva','syntax.py',199),
  ('retorna -> RETORNA ABRE_PAR expressao FECHA_PAR','retorna',4,'p_retorna','syntax.py',205),
  ('expressao -> expressao_simples','expressao',1,'p_expressao','syntax.py',211),
  ('expressao -> atribuicao','expressao',1,'p_expressao','syntax.py',212),
  ('expressao_simples -> expressao_aditiva','expressao_simples',1,'p_expressao_simples','syntax.py',218),
  ('expressao_simples -> expressao_simples operador_relacional expressao_aditiva','expressao_simples',3,'p_expressao_simples','syntax.py',219),
  ('expressao_aditiva -> expressao_multiplicativa','expressao_aditiva',1,'p_expressao_aditiva','syntax.py',228),
  ('expressao_aditiva -> expressao_aditiva operador_multiplicacao expressao_unaria','expressao_aditiva',3,'p_expressao_aditiva','syntax.py',229),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao_multiplicativa','syntax.py',238),
  ('expressao_multiplicativa -> expressao_multiplicativa operador_multiplicacao expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','syntax.py',239),
  ('expressao_unaria -> fator','expressao_unaria',1,'p_expressao_unaria','syntax.py',250),
  ('expressao_unaria -> operador_soma fator','expressao_unaria',2,'p_expressao_unaria','syntax.py',251),
  ('operador_relacional -> MENOR','operador_relacional',1,'p_operador_relacional','syntax.py',261),
  ('operador_relacional -> MAIOR','operador_relacional',1,'p_operador_relacional','syntax.py',262),
  ('operador_relacional -> IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',263),
  ('operador_relacional -> MENOR_IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',264),
  ('operador_relacional -> MAIOR_IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',265),
  ('operador_relacional -> NEGACAO','operador_relacional',1,'p_operador_relacional','syntax.py',266),
  ('operador_soma -> SOMA','operador_soma',1,'p_operador_soma','syntax.py',272),
  ('operador_soma -> SUB','operador_soma',1,'p_operador_soma','syntax.py',273),
  ('operador_multiplicacao -> MULT','operador_multiplicacao',1,'p_operador_multiplicacao','syntax.py',279),
  ('operador_multiplicacao -> DIVISAO','operador_multiplicacao',1,'p_operador_multiplicacao','syntax.py',280),
  ('fator -> ABRE_COL expressao FECHA_COL','fator',3,'p_fator','syntax.py',286),
  ('fator -> var','fator',1,'p_fator','syntax.py',287),
  ('fator -> chamada_funcao','fator',1,'p_fator','syntax.py',288),
  ('fator -> numero','fator',1,'p_fator','syntax.py',289),
  ('numero -> INTEIRO','numero',1,'p_numero','syntax.py',298),
  ('numero -> FLUTUANTE','numero',1,'p_numero','syntax.py',299),
  ('chamada_funcao -> ID ABRE_PAR lista_argumentos FECHA_PAR','chamada_funcao',4,'p_chamada_funcao','syntax.py',305),
  ('lista_argumentos -> lista_argumentos VIRGULA expressao','lista_argumentos',3,'p_lista_argumentos','syntax.py',311),
  ('lista_argumentos -> expressao','lista_argumentos',1,'p_lista_argumentos','syntax.py',312),
  ('lista_argumentos -> vazio','lista_argumentos',1,'p_lista_argumentos','syntax.py',313),
  ('vazio -> <empty>','vazio',0,'p_vazio','syntax.py',322),
]
