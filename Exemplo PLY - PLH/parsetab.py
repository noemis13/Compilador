
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADD_ASSIGN AND AND_ASSIGN AND_OP ASSIGN BREAK COLON COMMA CONTINUE DEFAULT DIV DIV_ASSIGN DOT EQ_OP EXP EXP_ASSIGN FLOAT FREE GE_OP ID IMPORT INT LEFT_ASSIGN LEFT_OP LEN LE_OP LOOP L_BRACE L_BRACKET L_PAREN MAJOR MINOR MOD MOD_ASSIGN MUL MUL_ASSIGN NE_OP NOT NOT_OP NULL OR OR_ASSIGN OR_OP QUESTION REM RETURN RIGHT_ASSIGN RIGHT_OP R_BRACE R_BRACKET R_PAREN SEMICOLON STR SUB SUB_ASSIGN XOR XOR_ASSIGNtask_definition : task_signature task_definitiontask_definition : task_signature task_signature : ID L_PAREN parameter_list R_PAREN statement  parameter_list : ID COMMA parameter_list  parameter_list : ID  parameter_list : empty  loop_statement : LOOP expression statement  loop_statement : LOOP ID COMMA expression COMMA value statement  loop_statement : LOOP ID COMMA expression statement  condition_statement : expression QUESTION statement more_condition  more_condition : OR binary_expression QUESTION statement more_condition more_condition : COLON statement  more_condition : empty  value_list : value_list COMMA expression  value_list : expression  value_list : empty  expression : binary_expression  expression : list_rem  expression : hash_def  expression : hash_rem  list_rem : ID L_BRACKET OR value R_BRACKET list_rem : ID L_BRACKET value OR R_BRACKET list_rem : ID L_BRACKET value OR value R_BRACKET binary_expression : binary_expression operator binary_expression  binary_expression : L_PAREN binary_expression R_PAREN  binary_expression : unary_operator binary_expression  binary_expression : value  list_req : ID list_req_access  list_req_access : L_BRACKET binary_expression R_BRACKET list_req_access  list_req_access : L_BRACKET binary_expression R_BRACKET  operator : binary_operator  operator : relational_operator \n    statement : expression_statement SEMICOLON\n              | compound_statement\n              | loop_statement\n              | condition_statement\n              | return_command\n              | free_function SEMICOLON\n              | import_function SEMICOLON\n              | external_call SEMICOLON\n              | task_call SEMICOLON\n              | loop_flows SEMICOLON\n     external_call : ID DOT task_call  expression_statement : ID assignment_operator expression  expression_statement : list_req assignment_operator expression \n    assignment_operator : ASSIGN\n                        | MUL_ASSIGN\n                        | DIV_ASSIGN\n                        | ADD_ASSIGN\n                        | SUB_ASSIGN\n                        | EXP_ASSIGN\n                        | LEFT_ASSIGN\n                        | RIGHT_ASSIGN\n                        | AND_ASSIGN\n                        | OR_ASSIGN\n                        | XOR_ASSIGN\n                        | MOD_ASSIGN\n     compound_statement : L_BRACE R_BRACE  compound_statement : L_BRACE statement_list R_BRACE  statement_list : statement_list statement  statement_list : statement  loop_flows : CONTINUE\n                   | BREAK  import_function : ID ASSIGN IMPORT L_PAREN STR R_PAREN  import_function : IMPORT L_PAREN ID R_PAREN  free_function : ID ASSIGN FREE L_PAREN ID R_PAREN  return_command : RETURN L_PAREN expression R_PAREN SEMICOLON  list_def : L_BRACKET binary_expression COLON binary_expression R_BRACKET  list_def : L_BRACKET value_list R_BRACKET  hash_def : L_BRACE key_value_list R_BRACE  hash_rem : value REM list_def  key_value_list : key_value_list COMMA value COLON expression  key_value_list : value COLON expression  key_value_list : empty  task_call : ID L_PAREN value_list R_PAREN  value : ID  value : INT  value : FLOAT  value : STR  value : task_call  value : list_req  value : external_call  value : list_def  value : LEN value  value : NULL \n    unary_operator : ADD\n                   | SUB\n                   | NOT\n    \n    binary_operator : ADD\n                    | SUB\n                    | MUL\n                    | DIV\n                    | EXP\n                    | AND\n                    | OR\n                    | XOR\n                    | MOD\n                    | RIGHT_OP\n                    | LEFT_OP\n    \n    relational_operator : NOT_OP\n                        | AND_OP\n                        | OR_OP\n                        | LE_OP\n                        | GE_OP\n                        | EQ_OP\n                        | NE_OP\n                        | MAJOR\n                        | MINOR\n     empty : '
    
_lr_action_items = {'MOD_ASSIGN':([26,32,102,113,115,164,178,],[64,64,-28,64,64,-30,-29,]),'R_PAREN':([4,6,7,8,10,16,18,20,21,22,23,25,27,29,45,48,49,50,51,52,53,54,56,59,101,102,108,119,128,131,133,134,135,142,144,145,150,153,154,160,164,171,174,175,177,178,179,187,],[-109,-6,9,-5,-109,-83,-18,-77,-27,-78,-85,-19,-20,-17,-79,-4,-27,-81,-80,-26,-76,-82,-15,-16,-109,-28,144,-84,-69,-71,-76,-24,160,-43,-25,166,-70,170,-14,-75,-30,-68,185,186,-22,-29,-21,-23,]),'FLOAT':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[22,22,-34,22,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,22,22,-87,-86,22,-88,-79,22,-27,-81,-80,-26,-76,-82,22,22,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,22,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,22,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,22,-28,-46,22,22,-33,-61,22,-58,-39,-84,-40,-38,22,-76,22,22,22,-69,22,-109,-71,-76,-24,22,-43,-25,22,-60,-59,22,-70,-7,22,22,-10,-13,22,-75,22,-30,22,-68,-12,-22,-29,-21,22,-9,22,-67,22,-23,22,-109,-8,-11,]),'L_BRACKET':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,32,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,115,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[13,13,-34,13,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,104,13,13,-87,-86,13,-88,-79,13,-27,-81,-80,-26,125,-82,13,104,13,-42,13,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,13,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,13,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,13,-28,-46,13,13,-33,-61,13,104,-58,-39,-84,-40,-38,13,104,13,13,13,-69,13,-109,-71,104,-24,13,-43,-25,13,-60,-59,13,-70,-7,13,13,-10,-13,13,-75,13,125,13,-68,-12,-22,-29,-21,13,-9,13,-67,13,-23,13,-109,-8,-11,]),'BREAK':([9,12,16,18,19,20,21,22,23,25,27,29,30,31,36,45,49,50,51,52,53,54,61,62,77,102,107,112,114,116,118,119,120,121,122,123,128,130,131,133,134,142,144,147,148,150,151,156,157,158,160,164,169,171,172,177,178,179,181,183,184,187,189,190,191,192,],[14,-34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,14,-79,-27,-81,-80,-26,-76,-82,14,-42,-41,-28,-33,-61,14,-58,-39,-84,-40,-38,14,-76,-69,-109,-71,-76,-24,-43,-25,-60,-59,-70,-7,14,-10,-13,-75,-30,14,-68,-12,-22,-29,-21,-9,-67,14,-23,14,-109,-8,-11,]),'LEFT_ASSIGN':([26,32,102,113,115,164,178,],[72,72,-28,72,72,-30,-29,]),'QUESTION':([15,16,18,20,21,22,23,25,26,27,28,29,32,42,45,49,50,51,52,53,54,102,110,113,115,119,128,131,134,142,144,150,160,164,171,173,177,178,179,187,],[61,-83,-18,-77,-27,-78,-85,-19,-81,-20,-80,-17,-76,-82,-79,-27,-81,-80,-26,-76,-82,-28,-27,-81,-76,-84,-69,-71,-24,-43,-25,-70,-75,-30,-68,184,-22,-29,-21,-23,]),'DIV':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,81,-76,-82,-79,-27,-81,-80,81,-76,-82,-76,81,-28,81,-27,-81,-76,-84,-76,-69,-76,81,-27,81,-43,-25,81,-75,-30,-68,81,-29,]),'MAJOR':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,82,-76,-82,-79,-27,-81,-80,82,-76,-82,-76,82,-28,82,-27,-81,-76,-84,-76,-69,-76,82,-27,82,-43,-25,82,-75,-30,-68,82,-29,]),'ASSIGN':([26,32,102,113,115,164,178,],[73,103,-28,73,103,-30,-29,]),'DOT':([32,53,58,115,123,133,],[105,105,105,105,105,105,]),'INT':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[20,20,-34,20,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,20,20,-87,-86,20,-88,-79,20,-27,-81,-80,-26,-76,-82,20,20,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,20,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,20,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,20,-28,-46,20,20,-33,-61,20,-58,-39,-84,-40,-38,20,-76,20,20,20,-69,20,-109,-71,-76,-24,20,-43,-25,20,-60,-59,20,-70,-7,20,20,-10,-13,20,-75,20,-30,20,-68,-12,-22,-29,-21,20,-9,20,-67,20,-23,20,-109,-8,-11,]),'OR_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,85,-76,-82,-79,-27,-81,-80,85,-76,-82,-76,85,-28,85,-27,-81,-76,-84,-76,-69,-76,85,-27,85,-43,-25,85,-75,-30,-68,85,-29,]),'FREE':([103,],[137,]),'COMMA':([8,13,16,18,20,21,22,23,25,27,29,36,45,49,50,51,52,53,54,55,56,57,58,59,60,101,102,111,117,119,123,128,131,133,134,135,142,144,150,154,160,164,167,169,171,177,178,179,187,188,],[10,-109,-83,-18,-77,-27,-78,-85,-19,-20,-17,-109,-79,-27,-81,-80,-26,-76,-82,-109,-15,127,-76,-16,-17,-109,-28,-74,149,-84,152,-69,-71,-76,-24,127,-43,-25,-70,-14,-75,-30,-73,182,-68,-22,-29,-21,-23,-72,]),'ADD_ASSIGN':([26,32,102,113,115,164,178,],[67,67,-28,67,67,-30,-29,]),'AND_ASSIGN':([26,32,102,113,115,164,178,],[69,69,-28,69,69,-30,-29,]),'GE_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,83,-76,-82,-79,-27,-81,-80,83,-76,-82,-76,83,-28,83,-27,-81,-76,-84,-76,-69,-76,83,-27,83,-43,-25,83,-75,-30,-68,83,-29,]),'EXP_ASSIGN':([26,32,102,113,115,164,178,],[71,71,-28,71,71,-30,-29,]),'$end':([1,3,5,12,19,24,30,31,62,77,107,116,118,120,121,130,148,151,157,158,172,181,183,190,191,192,],[0,-2,-1,-34,-37,-3,-36,-35,-42,-41,-33,-58,-39,-40,-38,-109,-59,-7,-10,-13,-12,-9,-67,-109,-8,-11,]),'NE_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,78,-76,-82,-79,-27,-81,-80,78,-76,-82,-76,78,-28,78,-27,-81,-76,-84,-76,-69,-76,78,-27,78,-43,-25,78,-75,-30,-68,78,-29,]),'OR':([12,16,19,20,21,22,23,26,28,29,30,31,32,42,45,49,50,51,52,53,54,58,60,62,77,102,104,107,108,110,113,115,116,118,119,120,121,123,128,130,133,134,138,139,142,144,148,151,155,157,158,160,164,171,172,173,178,181,183,190,191,192,],[-34,-83,-37,-77,-27,-78,-85,-81,-80,97,-36,-35,-76,-82,-79,-27,-81,-80,97,-76,-82,-76,97,-42,-41,-28,140,-33,97,-27,-81,-76,-58,-39,-84,-40,-38,-76,-69,159,-76,97,163,97,-43,-25,-59,-7,97,-10,-13,-75,-30,-68,-12,97,-29,-9,-67,159,-8,-11,]),'ID':([0,3,4,9,10,11,12,13,16,18,19,20,21,22,23,24,25,27,29,30,31,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,162,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[2,2,8,32,8,53,-34,58,-83,-18,-37,-77,-27,-78,-85,-3,-19,-20,-17,-36,-35,53,115,-87,-86,53,-88,-79,123,-27,-81,-80,-26,-76,-82,53,32,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,133,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,53,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,133,-28,-46,53,141,133,-33,145,-61,32,-58,-39,-84,-40,-38,32,-76,133,53,133,-69,53,-109,-71,-76,-24,53,-43,-25,133,-60,-59,53,-70,-7,133,32,-10,-13,53,-75,175,53,-30,32,-68,-12,-22,-29,-21,133,-9,53,-67,32,-23,32,-109,-8,-11,]),'EXP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,100,-76,-82,-79,-27,-81,-80,100,-76,-82,-76,100,-28,100,-27,-81,-76,-84,-76,-69,-76,100,-27,100,-43,-25,100,-75,-30,-68,100,-29,]),'SUB':([9,11,12,13,16,18,19,20,21,22,23,25,26,27,28,29,30,31,32,34,36,38,39,42,44,45,46,49,50,51,52,53,54,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,110,112,113,114,115,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,138,139,142,144,146,147,148,150,151,152,155,156,157,158,159,160,164,169,171,172,173,177,178,179,180,181,183,184,187,189,190,191,192,],[38,38,-34,38,-83,-18,-37,-77,-27,-78,-85,-19,-81,-20,-80,95,-36,-35,-76,38,38,-87,-86,-82,-88,-79,38,-27,-81,-80,95,-76,-82,-76,95,38,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,38,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,38,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,38,-28,-46,38,38,-33,95,-27,-61,-81,38,-76,-58,-39,-84,-40,-38,38,-76,38,38,38,-69,38,-109,-71,-76,95,-27,95,-43,-25,38,-60,-59,-70,-7,38,95,38,-10,-13,38,-75,-30,38,-68,-12,95,-22,-29,-21,38,-9,-67,38,-23,38,-109,-8,-11,]),'L_PAREN':([2,9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,32,34,35,36,38,39,44,45,46,47,49,50,51,52,53,54,58,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,115,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,136,137,141,142,144,146,147,148,150,151,152,156,157,158,159,160,164,169,171,172,177,178,179,180,181,183,184,187,189,190,191,192,],[4,34,34,-34,34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,101,34,109,34,-87,-86,-88,-79,34,124,-27,-81,-80,-26,101,-82,101,34,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,34,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,34,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,34,-28,-46,34,34,-33,-61,34,101,-58,-39,-84,-40,-38,34,101,34,34,34,-69,34,-109,-71,101,-24,161,162,101,-43,-25,34,-60,-59,-70,-7,34,34,-10,-13,34,-75,-30,34,-68,-12,-22,-29,-21,34,-9,-67,34,-23,34,-109,-8,-11,]),'COLON':([12,16,19,20,21,22,23,28,30,31,42,45,49,50,51,52,53,54,58,60,62,77,102,107,110,113,115,116,118,119,120,121,126,128,130,134,142,144,148,151,157,158,160,164,168,171,172,178,181,183,190,191,192,],[-34,-83,-37,-77,-27,-78,-85,-80,-36,-35,-82,-79,-27,-81,-80,-26,-76,-82,-76,129,-42,-41,-28,-33,146,-81,-76,-58,-39,-84,-40,-38,146,-69,156,-24,-43,-25,-59,-7,-10,-13,-75,-30,180,-68,-12,-29,-9,-67,156,-8,-11,]),'LE_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,96,-76,-82,-79,-27,-81,-80,96,-76,-82,-76,96,-28,96,-27,-81,-76,-84,-76,-69,-76,96,-27,96,-43,-25,96,-75,-30,-68,96,-29,]),'IMPORT':([9,12,16,18,19,20,21,22,23,25,27,29,30,31,36,45,49,50,51,52,53,54,61,62,77,102,103,107,112,114,116,118,119,120,121,122,123,128,130,131,133,134,142,144,147,148,150,151,156,157,158,160,164,169,171,172,177,178,179,181,183,184,187,189,190,191,192,],[35,-34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,35,-79,-27,-81,-80,-26,-76,-82,35,-42,-41,-28,136,-33,-61,35,-58,-39,-84,-40,-38,35,-76,-69,-109,-71,-76,-24,-43,-25,-60,-59,-70,-7,35,-10,-13,-75,-30,35,-68,-12,-22,-29,-21,-9,-67,35,-23,35,-109,-8,-11,]),'DIV_ASSIGN':([26,32,102,113,115,164,178,],[66,66,-28,66,66,-30,-29,]),'NOT':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,34,36,38,39,44,45,46,49,50,51,52,53,54,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,142,144,146,147,148,150,151,152,156,157,158,159,160,164,169,171,172,177,178,179,180,181,183,184,187,189,190,191,192,],[44,44,-34,44,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,44,44,-87,-86,-88,-79,44,-27,-81,-80,-26,-76,-82,44,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,44,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,44,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,44,-28,-46,44,44,-33,-61,44,-58,-39,-84,-40,-38,44,-76,44,44,44,-69,44,-109,-71,-76,-24,-43,-25,44,-60,-59,-70,-7,44,44,-10,-13,44,-75,-30,44,-68,-12,-22,-29,-21,44,-9,-67,44,-23,44,-109,-8,-11,]),'L_BRACE':([9,12,13,16,18,19,20,21,22,23,25,27,29,30,31,36,45,46,49,50,51,52,53,54,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,101,102,103,106,107,112,114,116,118,119,120,121,122,123,124,127,128,130,131,133,134,142,144,146,147,148,150,151,152,156,157,158,160,164,169,171,172,177,178,179,180,181,183,184,187,189,190,191,192,],[36,-34,55,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,36,-79,55,-27,-81,-80,-26,-76,-82,36,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,55,-47,-56,-41,55,-28,-46,55,-33,-61,36,-58,-39,-84,-40,-38,36,-76,55,55,-69,-109,-71,-76,-24,-43,-25,55,-60,-59,-70,-7,55,36,-10,-13,-75,-30,36,-68,-12,-22,-29,-21,55,-9,-67,36,-23,36,-109,-8,-11,]),'MUL_ASSIGN':([26,32,102,113,115,164,178,],[75,75,-28,75,75,-30,-29,]),'OR_ASSIGN':([26,32,102,113,115,164,178,],[65,65,-28,65,65,-30,-29,]),'R_BRACE':([12,16,18,19,20,21,22,23,25,27,29,30,31,36,45,49,50,51,52,53,54,55,62,77,102,107,111,112,114,116,117,118,119,120,121,128,130,131,133,134,142,144,147,148,150,151,157,158,160,164,167,171,172,177,178,179,181,183,187,188,190,191,192,],[-34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,116,-79,-27,-81,-80,-26,-76,-82,-109,-42,-41,-28,-33,-74,-61,148,-58,150,-39,-84,-40,-38,-69,-109,-71,-76,-24,-43,-25,-60,-59,-70,-7,-10,-13,-75,-30,-73,-68,-12,-22,-29,-21,-9,-67,-23,-72,-109,-8,-11,]),'LEN':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[40,40,-34,40,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,40,40,-87,-86,40,-88,-79,40,-27,-81,-80,-26,-76,-82,40,40,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,40,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,40,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,40,-28,-46,40,40,-33,-61,40,-58,-39,-84,-40,-38,40,-76,40,40,40,-69,40,-109,-71,-76,-24,40,-43,-25,40,-60,-59,40,-70,-7,40,40,-10,-13,40,-75,40,-30,40,-68,-12,-22,-29,-21,40,-9,40,-67,40,-23,40,-109,-8,-11,]),'NULL':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[23,23,-34,23,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,23,23,-87,-86,23,-88,-79,23,-27,-81,-80,-26,-76,-82,23,23,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,23,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,23,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,23,-28,-46,23,23,-33,-61,23,-58,-39,-84,-40,-38,23,-76,23,23,23,-69,23,-109,-71,-76,-24,23,-43,-25,23,-60,-59,23,-70,-7,23,23,-10,-13,23,-75,23,-30,23,-68,-12,-22,-29,-21,23,-9,23,-67,23,-23,23,-109,-8,-11,]),'NOT_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,84,-76,-82,-79,-27,-81,-80,84,-76,-82,-76,84,-28,84,-27,-81,-76,-84,-76,-69,-76,84,-27,84,-43,-25,84,-75,-30,-68,84,-29,]),'R_BRACKET':([13,16,18,20,21,22,23,25,27,29,45,49,50,51,52,53,54,56,57,58,59,60,102,119,128,131,133,134,138,139,142,144,150,154,155,160,163,164,165,171,176,177,178,179,187,],[-109,-83,-18,-77,-27,-78,-85,-19,-20,-17,-79,-27,-81,-80,-26,-76,-82,-15,128,-76,-16,-17,-28,-84,-69,-71,-76,-24,-27,164,-43,-25,-70,-14,171,-75,177,-30,179,-68,187,-22,-29,-21,-23,]),'MOD':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,86,-76,-82,-79,-27,-81,-80,86,-76,-82,-76,86,-28,86,-27,-81,-76,-84,-76,-69,-76,86,-27,86,-43,-25,86,-75,-30,-68,86,-29,]),'SEMICOLON':([14,16,17,18,20,21,22,23,25,27,28,29,33,37,41,42,43,45,49,50,51,52,53,54,102,119,128,131,132,133,134,142,143,144,150,160,164,166,170,171,177,178,179,185,186,187,],[-63,-83,62,-18,-77,-27,-78,-85,-19,-20,77,-17,107,118,-62,120,121,-79,-27,-81,-80,-26,-76,-82,-28,-84,-69,-71,-45,-76,-24,-43,-44,-25,-70,-75,-30,-65,183,-68,-22,-29,-21,-64,-66,-23,]),'ADD':([9,11,12,13,16,18,19,20,21,22,23,25,26,27,28,29,30,31,32,34,36,38,39,42,44,45,46,49,50,51,52,53,54,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,110,112,113,114,115,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,138,139,142,144,146,147,148,150,151,152,155,156,157,158,159,160,164,169,171,172,173,177,178,179,180,181,183,184,187,189,190,191,192,],[39,39,-34,39,-83,-18,-37,-77,-27,-78,-85,-19,-81,-20,-80,99,-36,-35,-76,39,39,-87,-86,-82,-88,-79,39,-27,-81,-80,99,-76,-82,-76,99,39,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,39,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,39,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,39,-28,-46,39,39,-33,99,-27,-61,-81,39,-76,-58,-39,-84,-40,-38,39,-76,39,39,39,-69,39,-109,-71,-76,99,-27,99,-43,-25,39,-60,-59,-70,-7,39,99,39,-10,-13,39,-75,-30,39,-68,-12,99,-22,-29,-21,39,-9,-67,39,-23,39,-109,-8,-11,]),'MINOR':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,88,-76,-82,-79,-27,-81,-80,88,-76,-82,-76,88,-28,88,-27,-81,-76,-84,-76,-69,-76,88,-27,88,-43,-25,88,-75,-30,-68,88,-29,]),'RIGHT_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,89,-76,-82,-79,-27,-81,-80,89,-76,-82,-76,89,-28,89,-27,-81,-76,-84,-76,-69,-76,89,-27,89,-43,-25,89,-75,-30,-68,89,-29,]),'CONTINUE':([9,12,16,18,19,20,21,22,23,25,27,29,30,31,36,45,49,50,51,52,53,54,61,62,77,102,107,112,114,116,118,119,120,121,122,123,128,130,131,133,134,142,144,147,148,150,151,156,157,158,160,164,169,171,172,177,178,179,181,183,184,187,189,190,191,192,],[41,-34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,41,-79,-27,-81,-80,-26,-76,-82,41,-42,-41,-28,-33,-61,41,-58,-39,-84,-40,-38,41,-76,-69,-109,-71,-76,-24,-43,-25,-60,-59,-70,-7,41,-10,-13,-75,-30,41,-68,-12,-22,-29,-21,-9,-67,41,-23,41,-109,-8,-11,]),'XOR':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,91,-76,-82,-79,-27,-81,-80,91,-76,-82,-76,91,-28,91,-27,-81,-76,-84,-76,-69,-76,91,-27,91,-43,-25,91,-75,-30,-68,91,-29,]),'AND_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,92,-76,-82,-79,-27,-81,-80,92,-76,-82,-76,92,-28,92,-27,-81,-76,-84,-76,-69,-76,92,-27,92,-43,-25,92,-75,-30,-68,92,-29,]),'SUB_ASSIGN':([26,32,102,113,115,164,178,],[70,70,-28,70,70,-30,-29,]),'AND':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,90,-76,-82,-79,-27,-81,-80,90,-76,-82,-76,90,-28,90,-27,-81,-76,-84,-76,-69,-76,90,-27,90,-43,-25,90,-75,-30,-68,90,-29,]),'REM':([16,20,21,22,23,26,28,32,42,45,50,51,53,54,58,102,110,113,115,119,123,128,133,142,160,164,171,178,],[-83,-77,63,-78,-85,-81,-80,-76,-82,-79,-81,-80,-76,-82,-76,-28,63,-81,-76,-84,-76,-69,-76,-43,-75,-30,-68,-29,]),'LEFT_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,94,-76,-82,-79,-27,-81,-80,94,-76,-82,-76,94,-28,94,-27,-81,-76,-84,-76,-69,-76,94,-27,94,-43,-25,94,-75,-30,-68,94,-29,]),'MUL':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,79,-76,-82,-79,-27,-81,-80,79,-76,-82,-76,79,-28,79,-27,-81,-76,-84,-76,-69,-76,79,-27,79,-43,-25,79,-75,-30,-68,79,-29,]),'EQ_OP':([16,20,21,22,23,26,28,29,32,42,45,49,50,51,52,53,54,58,60,102,108,110,113,115,119,123,128,133,134,138,139,142,144,155,160,164,171,173,178,],[-83,-77,-27,-78,-85,-81,-80,98,-76,-82,-79,-27,-81,-80,98,-76,-82,-76,98,-28,98,-27,-81,-76,-84,-76,-69,-76,98,-27,98,-43,-25,98,-75,-30,-68,98,-29,]),'RIGHT_ASSIGN':([26,32,102,113,115,164,178,],[68,68,-28,68,68,-30,-29,]),'XOR_ASSIGN':([26,32,102,113,115,164,178,],[76,76,-28,76,76,-30,-29,]),'STR':([9,11,12,13,16,18,19,20,21,22,23,25,27,29,30,31,34,36,38,39,40,44,45,46,49,50,51,52,53,54,55,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,112,114,116,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,140,142,144,146,147,148,149,150,151,152,156,157,158,159,160,161,163,164,169,171,172,177,178,179,180,181,182,183,184,187,189,190,191,192,],[45,45,-34,45,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,45,45,-87,-86,45,-88,-79,45,-27,-81,-80,-26,-76,-82,45,45,-42,-57,-55,-48,-49,-53,-54,-50,-51,-52,-46,45,-47,-56,-41,-106,-91,-31,-92,-107,-104,-100,-102,-97,45,-108,-98,-94,-96,-101,-32,-99,-90,-103,-95,-105,-89,-93,45,-28,-46,45,45,-33,-61,45,-58,-39,-84,-40,-38,45,-76,45,45,45,-69,45,-109,-71,-76,-24,45,-43,-25,45,-60,-59,45,-70,-7,45,45,-10,-13,45,-75,174,45,-30,45,-68,-12,-22,-29,-21,45,-9,45,-67,45,-23,45,-109,-8,-11,]),'LOOP':([9,12,16,18,19,20,21,22,23,25,27,29,30,31,36,45,49,50,51,52,53,54,61,62,77,102,107,112,114,116,118,119,120,121,122,123,128,130,131,133,134,142,144,147,148,150,151,156,157,158,160,164,169,171,172,177,178,179,181,183,184,187,189,190,191,192,],[46,-34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,46,-79,-27,-81,-80,-26,-76,-82,46,-42,-41,-28,-33,-61,46,-58,-39,-84,-40,-38,46,-76,-69,-109,-71,-76,-24,-43,-25,-60,-59,-70,-7,46,-10,-13,-75,-30,46,-68,-12,-22,-29,-21,-9,-67,46,-23,46,-109,-8,-11,]),'RETURN':([9,12,16,18,19,20,21,22,23,25,27,29,30,31,36,45,49,50,51,52,53,54,61,62,77,102,107,112,114,116,118,119,120,121,122,123,128,130,131,133,134,142,144,147,148,150,151,156,157,158,160,164,169,171,172,177,178,179,181,183,184,187,189,190,191,192,],[47,-34,-83,-18,-37,-77,-27,-78,-85,-19,-20,-17,-36,-35,47,-79,-27,-81,-80,-26,-76,-82,47,-42,-41,-28,-33,-61,47,-58,-39,-84,-40,-38,47,-76,-69,-109,-71,-76,-24,-43,-25,-60,-59,-70,-7,47,-10,-13,-75,-30,47,-68,-12,-22,-29,-21,-9,-67,47,-23,47,-109,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([9,36,61,114,122,156,169,184,189,],[33,33,33,33,33,33,33,33,33,]),'unary_operator':([9,11,13,34,36,46,61,74,87,101,104,106,114,122,124,125,127,129,146,152,156,159,169,180,184,189,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'return_command':([9,36,61,114,122,156,169,184,189,],[19,19,19,19,19,19,19,19,19,]),'list_rem':([9,13,36,46,61,74,101,106,114,122,124,127,146,152,156,169,180,184,189,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'statement_list':([36,],[114,]),'parameter_list':([4,10,],[7,48,]),'more_condition':([130,190,],[157,192,]),'expression':([9,13,36,46,61,74,101,106,114,122,124,127,146,152,156,169,180,184,189,],[15,56,15,122,15,132,56,143,15,15,153,154,167,169,15,15,188,15,15,]),'binary_operator':([29,52,60,108,134,139,155,173,],[80,80,80,80,80,80,80,80,]),'loop_flows':([9,36,61,114,122,156,169,184,189,],[17,17,17,17,17,17,17,17,17,]),'compound_statement':([9,36,61,114,122,156,169,184,189,],[12,12,12,12,12,12,12,12,12,]),'task_definition':([0,3,],[1,5,]),'value_list':([13,101,],[57,135,]),'task_signature':([0,3,],[3,3,]),'value':([9,11,13,34,36,40,46,55,61,74,87,101,104,106,114,122,124,125,127,129,140,146,149,152,156,159,163,169,180,182,184,189,],[21,49,21,49,110,119,21,126,21,21,49,21,138,21,21,21,21,49,21,49,165,21,168,21,21,49,176,21,21,189,21,21,]),'relational_operator':([29,52,60,108,134,139,155,173,],[93,93,93,93,93,93,93,93,]),'import_function':([9,36,61,114,122,156,169,184,189,],[37,37,37,37,37,37,37,37,37,]),'empty':([4,10,13,36,55,101,130,190,],[6,6,59,111,111,59,158,158,]),'statement':([9,36,61,114,122,156,169,184,189,],[24,112,130,147,151,172,181,190,191,]),'hash_def':([9,13,36,46,61,74,101,106,114,122,124,127,146,152,156,169,180,184,189,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'list_req':([9,11,13,34,36,40,46,55,61,74,87,101,104,106,114,122,124,125,127,129,140,146,149,152,156,159,163,169,180,182,184,189,],[26,50,50,50,113,50,50,50,26,50,50,50,50,50,26,26,50,50,50,50,50,50,50,50,26,50,50,26,50,50,26,26,]),'hash_rem':([9,13,36,46,61,74,101,106,114,122,124,127,146,152,156,169,180,184,189,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'task_call':([9,11,13,34,36,40,46,55,61,74,87,101,104,105,106,114,122,124,125,127,129,140,146,149,152,156,159,163,169,180,182,184,189,],[28,51,51,51,28,51,51,51,28,51,51,51,51,142,51,28,28,51,51,51,51,51,51,51,51,28,51,51,28,51,51,28,28,]),'binary_expression':([9,11,13,34,36,46,61,74,87,101,104,106,114,122,124,125,127,129,146,152,156,159,169,180,184,189,],[29,52,60,108,29,29,29,29,134,29,139,29,29,29,29,139,29,155,29,29,29,173,29,29,29,29,]),'operator':([29,52,60,108,134,139,155,173,],[87,87,87,87,87,87,87,87,]),'free_function':([9,36,61,114,122,156,169,184,189,],[43,43,43,43,43,43,43,43,43,]),'list_def':([9,11,13,34,36,40,46,55,61,63,74,87,101,104,106,114,122,124,125,127,129,140,146,149,152,156,159,163,169,180,182,184,189,],[16,16,16,16,16,16,16,16,16,131,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'list_req_access':([32,53,58,115,123,133,164,],[102,102,102,102,102,102,178,]),'assignment_operator':([26,32,113,115,],[74,106,74,106,]),'loop_statement':([9,36,61,114,122,156,169,184,189,],[31,31,31,31,31,31,31,31,31,]),'external_call':([9,11,13,34,36,40,46,55,61,74,87,101,104,106,114,122,124,125,127,129,140,146,149,152,156,159,163,169,180,182,184,189,],[42,54,54,54,42,54,54,54,42,54,54,54,54,54,42,42,54,54,54,54,54,54,54,54,42,54,54,42,54,54,42,42,]),'key_value_list':([36,55,],[117,117,]),'condition_statement':([9,36,61,114,122,156,169,184,189,],[30,30,30,30,30,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> task_definition","S'",1,None,None,None),
  ('task_definition -> task_signature task_definition','task_definition',2,'p_tas_definition_1','syntax.py',6),
  ('task_definition -> task_signature','task_definition',1,'p_tas_definition_2','syntax.py',10),
  ('task_signature -> ID L_PAREN parameter_list R_PAREN statement','task_signature',5,'p_task_signature','syntax.py',14),
  ('parameter_list -> ID COMMA parameter_list','parameter_list',3,'p_parameter_list_1','syntax.py',18),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list_2','syntax.py',22),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list_3','syntax.py',26),
  ('loop_statement -> LOOP expression statement','loop_statement',3,'p_loop_statement_1','syntax.py',29),
  ('loop_statement -> LOOP ID COMMA expression COMMA value statement','loop_statement',7,'p_loop_statement_2','syntax.py',33),
  ('loop_statement -> LOOP ID COMMA expression statement','loop_statement',5,'p_loop_statement_3','syntax.py',37),
  ('condition_statement -> expression QUESTION statement more_condition','condition_statement',4,'p_condition_statement_1','syntax.py',41),
  ('more_condition -> OR binary_expression QUESTION statement more_condition','more_condition',5,'p_more_condition_1','syntax.py',45),
  ('more_condition -> COLON statement','more_condition',2,'p_more_condition_2','syntax.py',49),
  ('more_condition -> empty','more_condition',1,'p_more_condition_3','syntax.py',53),
  ('value_list -> value_list COMMA expression','value_list',3,'p_value_list_1','syntax.py',56),
  ('value_list -> expression','value_list',1,'p_value_list_2','syntax.py',60),
  ('value_list -> empty','value_list',1,'p_value_list_3','syntax.py',64),
  ('expression -> binary_expression','expression',1,'p_expression_1','syntax.py',68),
  ('expression -> list_rem','expression',1,'p_expression_2','syntax.py',72),
  ('expression -> hash_def','expression',1,'p_expression_3','syntax.py',76),
  ('expression -> hash_rem','expression',1,'p_expression_4','syntax.py',80),
  ('list_rem -> ID L_BRACKET OR value R_BRACKET','list_rem',5,'p_list_rem_1','syntax.py',84),
  ('list_rem -> ID L_BRACKET value OR R_BRACKET','list_rem',5,'p_list_rem_2','syntax.py',88),
  ('list_rem -> ID L_BRACKET value OR value R_BRACKET','list_rem',6,'p_list_rem_3','syntax.py',92),
  ('binary_expression -> binary_expression operator binary_expression','binary_expression',3,'p_binary_expression_1','syntax.py',96),
  ('binary_expression -> L_PAREN binary_expression R_PAREN','binary_expression',3,'p_binary_expression_2','syntax.py',100),
  ('binary_expression -> unary_operator binary_expression','binary_expression',2,'p_binary_expression_3','syntax.py',104),
  ('binary_expression -> value','binary_expression',1,'p_binary_expression_4','syntax.py',108),
  ('list_req -> ID list_req_access','list_req',2,'p_list_req','syntax.py',112),
  ('list_req_access -> L_BRACKET binary_expression R_BRACKET list_req_access','list_req_access',4,'p_list_req_access_1','syntax.py',116),
  ('list_req_access -> L_BRACKET binary_expression R_BRACKET','list_req_access',3,'p_list_req_access_2','syntax.py',120),
  ('operator -> binary_operator','operator',1,'p_operator_1','syntax.py',124),
  ('operator -> relational_operator','operator',1,'p_operator_2','syntax.py',128),
  ('statement -> expression_statement SEMICOLON','statement',2,'p_statement','syntax.py',133),
  ('statement -> compound_statement','statement',1,'p_statement','syntax.py',134),
  ('statement -> loop_statement','statement',1,'p_statement','syntax.py',135),
  ('statement -> condition_statement','statement',1,'p_statement','syntax.py',136),
  ('statement -> return_command','statement',1,'p_statement','syntax.py',137),
  ('statement -> free_function SEMICOLON','statement',2,'p_statement','syntax.py',138),
  ('statement -> import_function SEMICOLON','statement',2,'p_statement','syntax.py',139),
  ('statement -> external_call SEMICOLON','statement',2,'p_statement','syntax.py',140),
  ('statement -> task_call SEMICOLON','statement',2,'p_statement','syntax.py',141),
  ('statement -> loop_flows SEMICOLON','statement',2,'p_statement','syntax.py',142),
  ('external_call -> ID DOT task_call','external_call',3,'p_external_call','syntax.py',147),
  ('expression_statement -> ID assignment_operator expression','expression_statement',3,'p_expression_statement_1','syntax.py',151),
  ('expression_statement -> list_req assignment_operator expression','expression_statement',3,'p_expression_statement_2','syntax.py',155),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',160),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',161),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',162),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',163),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',164),
  ('assignment_operator -> EXP_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',165),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',166),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',167),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',168),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',169),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',170),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',171),
  ('compound_statement -> L_BRACE R_BRACE','compound_statement',2,'p_compound_statement_1','syntax.py',176),
  ('compound_statement -> L_BRACE statement_list R_BRACE','compound_statement',3,'p_compound_statement_2','syntax.py',180),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','syntax.py',184),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','syntax.py',188),
  ('loop_flows -> CONTINUE','loop_flows',1,'p_loop_flows','syntax.py',192),
  ('loop_flows -> BREAK','loop_flows',1,'p_loop_flows','syntax.py',193),
  ('import_function -> ID ASSIGN IMPORT L_PAREN STR R_PAREN','import_function',6,'p_import_function_1','syntax.py',197),
  ('import_function -> IMPORT L_PAREN ID R_PAREN','import_function',4,'p_import_function_2','syntax.py',201),
  ('free_function -> ID ASSIGN FREE L_PAREN ID R_PAREN','free_function',6,'p_free_function','syntax.py',205),
  ('return_command -> RETURN L_PAREN expression R_PAREN SEMICOLON','return_command',5,'p_return_command','syntax.py',209),
  ('list_def -> L_BRACKET binary_expression COLON binary_expression R_BRACKET','list_def',5,'p_list_def_1','syntax.py',213),
  ('list_def -> L_BRACKET value_list R_BRACKET','list_def',3,'p_list_def_2','syntax.py',217),
  ('hash_def -> L_BRACE key_value_list R_BRACE','hash_def',3,'p_hash_def','syntax.py',221),
  ('hash_rem -> value REM list_def','hash_rem',3,'p_hash_rem','syntax.py',225),
  ('key_value_list -> key_value_list COMMA value COLON expression','key_value_list',5,'p_key_value_list_1','syntax.py',229),
  ('key_value_list -> value COLON expression','key_value_list',3,'p_key_value_list_2','syntax.py',233),
  ('key_value_list -> empty','key_value_list',1,'p_key_value_list_3','syntax.py',237),
  ('task_call -> ID L_PAREN value_list R_PAREN','task_call',4,'p_task_call','syntax.py',241),
  ('value -> ID','value',1,'p_value_1','syntax.py',245),
  ('value -> INT','value',1,'p_value_2','syntax.py',249),
  ('value -> FLOAT','value',1,'p_value_3','syntax.py',253),
  ('value -> STR','value',1,'p_value_4','syntax.py',257),
  ('value -> task_call','value',1,'p_value_5','syntax.py',261),
  ('value -> list_req','value',1,'p_value_6','syntax.py',265),
  ('value -> external_call','value',1,'p_value_7','syntax.py',269),
  ('value -> list_def','value',1,'p_value_8','syntax.py',273),
  ('value -> LEN value','value',2,'p_value_9','syntax.py',277),
  ('value -> NULL','value',1,'p_value_10','syntax.py',281),
  ('unary_operator -> ADD','unary_operator',1,'p_unary_operator','syntax.py',286),
  ('unary_operator -> SUB','unary_operator',1,'p_unary_operator','syntax.py',287),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','syntax.py',288),
  ('binary_operator -> ADD','binary_operator',1,'p_binary_operator','syntax.py',294),
  ('binary_operator -> SUB','binary_operator',1,'p_binary_operator','syntax.py',295),
  ('binary_operator -> MUL','binary_operator',1,'p_binary_operator','syntax.py',296),
  ('binary_operator -> DIV','binary_operator',1,'p_binary_operator','syntax.py',297),
  ('binary_operator -> EXP','binary_operator',1,'p_binary_operator','syntax.py',298),
  ('binary_operator -> AND','binary_operator',1,'p_binary_operator','syntax.py',299),
  ('binary_operator -> OR','binary_operator',1,'p_binary_operator','syntax.py',300),
  ('binary_operator -> XOR','binary_operator',1,'p_binary_operator','syntax.py',301),
  ('binary_operator -> MOD','binary_operator',1,'p_binary_operator','syntax.py',302),
  ('binary_operator -> RIGHT_OP','binary_operator',1,'p_binary_operator','syntax.py',303),
  ('binary_operator -> LEFT_OP','binary_operator',1,'p_binary_operator','syntax.py',304),
  ('relational_operator -> NOT_OP','relational_operator',1,'p_relational_operator','syntax.py',310),
  ('relational_operator -> AND_OP','relational_operator',1,'p_relational_operator','syntax.py',311),
  ('relational_operator -> OR_OP','relational_operator',1,'p_relational_operator','syntax.py',312),
  ('relational_operator -> LE_OP','relational_operator',1,'p_relational_operator','syntax.py',313),
  ('relational_operator -> GE_OP','relational_operator',1,'p_relational_operator','syntax.py',314),
  ('relational_operator -> EQ_OP','relational_operator',1,'p_relational_operator','syntax.py',315),
  ('relational_operator -> NE_OP','relational_operator',1,'p_relational_operator','syntax.py',316),
  ('relational_operator -> MAJOR','relational_operator',1,'p_relational_operator','syntax.py',317),
  ('relational_operator -> MINOR','relational_operator',1,'p_relational_operator','syntax.py',318),
  ('empty -> <empty>','empty',0,'p_empty','syntax.py',323),
]
