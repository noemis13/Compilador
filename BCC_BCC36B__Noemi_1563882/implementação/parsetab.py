
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALNEGACAOMENOR_IGUALMAIORMAIOR_IGUALMENORE_LOGICOOU_LOGICOleftSOMASUBleftMULTDIVISAODIVISAO MULT VIRGULA ATRIBUT MENOR MAIOR IGUAL MENOR_IGUAL MAIOR_IGUAL ABRE_PAR FECHA_PAR DOIS_PONTOS SOMA SUB DIFERENCA ABRE_COL FECHA_COL NOTACAO_CIENTIFICA ID E_LOGICO OU_LOGICO NEGACAO SENAO FIM REPITA INTEIRO RETORNA ESCREVA ATE ENTAO FLUTUANTE SE LEIA\n        programa : lista_declaracoes\n                     \n        lista_declaracoes : lista_declaracoes declaracao\n                           | declaracao\n\t\t\t   | error\n        \n        declaracao : declaracao_variaveis\n                    | inicializacao_variaveis\n                    | declaracao_funcao\n        \n        declaracao_variaveis : tipo DOIS_PONTOS lista_variaveis\n        \n        declaracao_variaveis : tipo DOIS_PONTOS error\n        \n        inicializacao_variaveis : atribuicao\n        \n        lista_variaveis : var VIRGULA lista_variaveis\n                        | var\n        \n        var : ID\n            | ID indice\n        \n        indice : indice ABRE_COL expressao FECHA_COL\n               | ABRE_COL expressao FECHA_COL\n        \n        tipo : INTEIRO\n\t     | FLUTUANTE\n        \n        declaracao_funcao : tipo cabecalho\n                        | cabecalho\n        \n        cabecalho : ID ABRE_PAR lista_parametros FECHA_PAR corpo FIM\n        \n        lista_parametros : lista_parametros VIRGULA parametro\n                            | parametro\n                            | vazio\n        \n        parametro : tipo DOIS_PONTOS ID\n        \n        parametro : parametro ABRE_COL FECHA_COL\n        \n        corpo : corpo acao\n                | vazio\n        \n        acao : expressao\n                    | declaracao_variaveis\n                    | se\n                    | repita\n                    | leia\n                    | escreva\n                    | retorna\n                    | error\n\n        \n            se : SE expressao ENTAO corpo FIM\n                | SE expressao ENTAO corpo SENAO corpo FIM\n        \n            repita : REPITA corpo ATE expressao\n        \n            atribuicao : var ATRIBUT expressao\n        \n            leia : LEIA ABRE_PAR ID FECHA_PAR\n        \n            escreva : ESCREVA ABRE_PAR expressao FECHA_PAR\n        \n            retorna : RETORNA ABRE_PAR expressao FECHA_PAR\n        \n            expressao : expressao_logica\n                        | atribuicao\n        \n            expressao_logica : expressao_simples\n                             | expressao_logica operador_logico expressao_simples\n        \n            expressao_simples : expressao_aditiva\n                              | expressao_simples operador_relacional expressao_aditiva\n        \n            expressao_aditiva : expressao_multiplicativa\n                                | expressao_aditiva operador_soma expressao_multiplicativa\n        \n           expressao_multiplicativa : expressao_unaria\n                           | expressao_multiplicativa operador_multiplicacao expressao_unaria\n\n        \n            expressao_unaria : fator\n                            | operador_soma fator\n        \n            operador_relacional : MENOR\n                                | MAIOR\n                                | IGUAL\n                                | DIFERENCA\n                                | MENOR_IGUAL\n                                | MAIOR_IGUAL\n                                | NEGACAO\n        \n            operador_logico : E_LOGICO\n                            | OU_LOGICO\n\n        \n            operador_soma : SOMA\n                          | SUB\n\n        \n            operador_multiplicacao : MULT\n                                    | DIVISAO\n        \n            fator : ABRE_COL expressao FECHA_COL\n                    | var\n                    | chamada_funcao\n                    | numero\n        \n            numero : INTEIRO\n                    | FLUTUANTE\n                    | NOTACAO_CIENTIFICA\n        \n            chamada_funcao : ID ABRE_PAR lista_argumentos FECHA_PAR\n        \n            lista_argumentos : lista_argumentos VIRGULA expressao\n                            | expressao\n                            | vazio\n        \n            vazio :\n        '
    
_lr_action_items = {'VIRGULA':([17,18,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,44,45,47,48,51,55,56,57,71,78,79,80,81,82,83,84,85,86,87,88,89,94,113,],[-14,-80,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-23,-24,75,77,-13,-70,-55,-80,-16,-47,-78,93,-79,-69,-49,-53,-51,-15,-26,-25,-22,-76,-77,]),'DIFERENCA':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,63,-50,-52,-48,-73,-54,-70,-55,-16,63,-69,-49,-53,-51,-15,-76,-73,-74,]),'NEGACAO':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,65,-50,-52,-48,-73,-54,-70,-55,-16,65,-69,-49,-53,-51,-15,-76,-73,-74,]),'DOIS_PONTOS':([2,10,12,46,99,104,106,],[-18,-17,21,74,-17,21,-18,]),'ABRE_PAR':([5,22,30,98,108,112,],[18,18,57,114,117,118,]),'FLUTUANTE':([0,1,4,6,8,9,11,13,14,15,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,82,83,84,85,86,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,110,111,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[2,-5,-3,-6,-10,2,-7,-20,-4,25,25,-14,2,-2,-19,-44,-40,-74,-70,25,-66,-71,-13,-72,-65,25,-75,-46,-45,-50,-52,-48,-73,-54,25,-12,-8,-9,-13,25,-63,-64,-70,-55,25,25,-58,-56,-57,-59,-60,-62,-61,25,-67,-68,25,-16,2,-80,-47,-69,-49,-53,-51,-15,-28,106,-11,25,-76,-29,-30,-34,-73,-33,-27,-80,25,-35,-74,-32,-31,-21,-36,106,25,25,25,-80,-41,-39,106,-42,-43,-80,-37,106,-38,]),'IGUAL':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,60,-50,-52,-48,-73,-54,-70,-55,-16,60,-69,-49,-53,-51,-15,-76,-73,-74,]),'MAIOR_IGUAL':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,66,-50,-52,-48,-73,-54,-70,-55,-16,66,-69,-49,-53,-51,-15,-76,-73,-74,]),'ESCREVA':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,121,124,125,126,127,128,129,130,131,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,108,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,108,-80,-41,-39,108,-42,-43,-80,-37,108,-38,]),'MULT':([17,25,26,29,30,31,34,37,38,40,41,55,56,71,82,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,68,-52,-73,-54,-70,-55,-16,-69,-53,68,-15,-76,-73,-74,]),'OU_LOGICO':([17,23,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,54,-74,-70,-71,-13,-72,-75,-46,-50,-52,-48,-73,-54,-70,-55,-16,-47,-69,-49,-53,-51,-15,-76,-73,-74,]),'DIVISAO':([17,25,26,29,30,31,34,37,38,40,41,55,56,71,82,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,69,-52,-73,-54,-70,-55,-16,-69,-53,69,-15,-76,-73,-74,]),'INTEIRO':([0,1,4,6,8,9,11,13,14,15,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,78,82,83,84,85,86,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,110,111,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[10,-5,-3,-6,-10,10,-7,-20,-4,40,40,-14,10,-2,-19,-44,-40,-74,-70,40,-66,-71,-13,-72,-65,40,-75,-46,-45,-50,-52,-48,-73,-54,40,-12,-8,-9,-13,40,-63,-64,-70,-55,40,40,-58,-56,-57,-59,-60,-62,-61,40,-67,-68,40,-16,10,-80,-47,-69,-49,-53,-51,-15,-28,99,-11,40,-76,-29,-30,-34,-73,-33,-27,-80,40,-35,-74,-32,-31,-21,-36,99,40,40,40,-80,-41,-39,99,-42,-43,-80,-37,99,-38,]),'ID':([0,1,2,4,6,8,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,76,77,78,82,83,84,85,86,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,110,111,114,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[5,-5,-18,-3,-6,-10,5,-17,-7,22,-20,-4,30,30,-14,-2,-19,51,-44,-40,-74,-70,30,-66,-71,-13,-72,-65,30,-75,-46,-45,-50,-52,-48,-73,-54,30,-12,-8,-9,-13,30,-63,-64,-70,-55,30,30,-58,-56,-57,-59,-60,-62,-61,30,-67,-68,30,-16,88,-80,51,-47,-69,-49,-53,-51,-15,-28,30,-11,30,-76,-29,-30,-34,-73,-33,-27,-80,30,-35,-74,-32,-31,-21,-36,119,30,30,30,30,-80,-41,-39,30,-42,-43,-80,-37,30,-38,]),'SOMA':([15,16,17,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,76,78,82,83,84,85,86,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,111,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[32,32,-14,-44,-40,-74,-70,-66,-71,-13,-72,-65,32,-75,-46,-45,-50,-52,32,-73,-54,32,-12,-8,-9,-13,32,-63,-64,-70,-55,32,32,-58,-56,-57,-59,-60,-62,-61,32,-67,-68,32,-16,-80,-47,-69,32,-53,-51,-15,-28,32,-11,32,-76,-29,-30,-34,-73,-33,-27,-80,32,-35,-74,-32,-31,-36,32,32,32,32,-80,-41,-39,32,-42,-43,-80,-37,32,-38,]),'ABRE_COL':([5,15,16,17,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,76,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,111,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[16,33,33,43,-44,-40,-74,-70,33,-66,-71,16,-72,-65,33,-75,-46,-45,-50,-52,-48,-73,-54,33,73,-12,-8,-9,16,33,-63,-64,-70,-55,33,33,-58,-56,-57,-59,-60,-62,-61,33,-67,-68,33,-16,-80,-47,-69,-49,-53,-51,-15,-26,-25,73,-28,33,-11,33,-76,-29,-30,-34,-73,-33,-27,-80,33,-35,-74,-32,-31,-36,33,33,33,33,-80,-41,-39,33,-42,-43,-80,-37,33,-38,]),'NOTACAO_CIENTIFICA':([15,16,17,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,76,78,82,83,84,85,86,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,111,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[34,34,-14,-44,-40,-74,-70,34,-66,-71,-13,-72,-65,34,-75,-46,-45,-50,-52,-48,-73,-54,34,-12,-8,-9,-13,34,-63,-64,-70,-55,34,34,-58,-56,-57,-59,-60,-62,-61,34,-67,-68,34,-16,-80,-47,-69,-49,-53,-51,-15,-28,34,-11,34,-76,-29,-30,-34,-73,-33,-27,-80,34,-35,-74,-32,-31,-36,34,34,34,34,-80,-41,-39,34,-42,-43,-80,-37,34,-38,]),'ATE':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,78,82,83,84,85,86,90,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,124,125,127,128,130,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-47,-69,-49,-53,-51,-15,-28,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,120,-41,-39,-42,-43,-37,-38,]),'MENOR_IGUAL':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,64,-50,-52,-48,-73,-54,-70,-55,-16,64,-69,-49,-53,-51,-15,-76,-73,-74,]),'ATRIBUT':([3,5,17,26,30,71,86,],[15,-13,-14,15,-13,-16,-15,]),'RETORNA':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,121,124,125,126,127,128,129,130,131,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,112,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,112,-80,-41,-39,112,-42,-43,-80,-37,112,-38,]),'REPITA':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,121,124,125,126,127,128,129,130,131,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,102,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,102,-80,-41,-39,102,-42,-43,-80,-37,102,-38,]),'$end':([1,4,6,7,8,9,11,13,14,17,19,20,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,78,82,83,84,85,86,92,94,110,],[-5,-3,-6,0,-10,-1,-7,-20,-4,-14,-2,-19,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-47,-69,-49,-53,-51,-15,-11,-76,-21,]),'ENTAO':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,116,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-70,-55,-16,-47,-69,-49,-53,-51,-15,-76,121,]),'SE':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,121,124,125,126,127,128,129,130,131,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,103,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,103,-80,-41,-39,103,-42,-43,-80,-37,103,-38,]),'SUB':([15,16,17,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,76,78,82,83,84,85,86,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,109,111,115,117,118,120,121,124,125,126,127,128,129,130,131,132,],[28,28,-14,-44,-40,-74,-70,-66,-71,-13,-72,-65,28,-75,-46,-45,-50,-52,28,-73,-54,28,-12,-8,-9,-13,28,-63,-64,-70,-55,28,28,-58,-56,-57,-59,-60,-62,-61,28,-67,-68,28,-16,-80,-47,-69,28,-53,-51,-15,-28,28,-11,28,-76,-29,-30,-34,-73,-33,-27,-80,28,-35,-74,-32,-31,-36,28,28,28,28,-80,-41,-39,28,-42,-43,-80,-37,28,-38,]),'FIM':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,105,106,107,109,111,121,124,125,126,127,128,129,130,131,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,110,-11,-76,-29,-30,-34,-73,-33,-27,-35,-74,-32,-31,-36,-80,-41,-39,130,-42,-43,-80,-37,132,-38,]),'MENOR':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,61,-50,-52,-48,-73,-54,-70,-55,-16,61,-69,-49,-53,-51,-15,-76,-73,-74,]),'MAIOR':([17,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,-74,-70,-71,-13,-72,-75,62,-50,-52,-48,-73,-54,-70,-55,-16,62,-69,-49,-53,-51,-15,-76,-73,-74,]),'LEIA':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,121,124,125,126,127,128,129,130,131,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,98,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,98,-80,-41,-39,98,-42,-43,-80,-37,98,-38,]),'FECHA_PAR':([17,18,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,44,45,47,55,56,57,71,78,79,80,81,82,83,84,85,86,87,88,89,94,113,119,122,123,],[-14,-80,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-23,-24,76,-70,-55,-80,-16,-47,-78,94,-79,-69,-49,-53,-51,-15,-26,-25,-22,-76,-77,124,127,128,]),'FECHA_COL':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,42,55,56,58,71,72,73,78,82,83,84,85,86,94,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,71,-70,-55,82,-16,86,87,-47,-69,-49,-53,-51,-15,-76,]),'error':([0,17,21,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,76,78,82,83,84,85,86,90,91,92,94,95,96,97,99,100,101,102,105,106,107,109,111,115,121,124,125,126,127,128,129,130,131,132,],[14,-14,50,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-80,-47,-69,-49,-53,-51,-15,-28,111,-11,-76,-29,-30,-34,-73,-33,-27,-80,-35,-74,-32,-31,-36,111,-80,-41,-39,111,-42,-43,-80,-37,111,-38,]),'SENAO':([17,23,24,25,26,29,30,31,34,35,36,37,38,39,40,41,48,49,50,51,55,56,71,78,82,83,84,85,86,90,92,94,95,96,97,99,100,101,105,106,107,109,111,121,124,125,126,127,128,130,132,],[-14,-44,-40,-74,-70,-71,-13,-72,-75,-46,-45,-50,-52,-48,-73,-54,-12,-8,-9,-13,-70,-55,-16,-47,-69,-49,-53,-51,-15,-28,-11,-76,-29,-30,-34,-73,-33,-27,-35,-74,-32,-31,-36,-80,-41,-39,129,-42,-43,-37,-38,]),'E_LOGICO':([17,23,25,26,29,30,31,34,35,37,38,39,40,41,55,56,71,78,82,83,84,85,86,94,99,106,],[-14,53,-74,-70,-71,-13,-72,-75,-46,-50,-52,-48,-73,-54,-70,-55,-16,-47,-69,-49,-53,-51,-15,-76,-73,-74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressao_logica':([15,16,33,43,57,91,93,103,115,117,118,120,126,131,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'operador_multiplicacao':([37,85,],[67,67,]),'expressao':([15,16,33,43,57,91,93,103,115,117,118,120,126,131,],[24,42,58,72,79,95,113,116,95,122,123,125,95,95,]),'retorna':([91,115,126,131,],[105,105,105,105,]),'declaracao_variaveis':([0,9,91,115,126,131,],[1,1,96,96,96,96,]),'escreva':([91,115,126,131,],[97,97,97,97,]),'operador_logico':([23,],[52,]),'var':([0,9,15,16,21,27,33,43,52,57,59,67,70,77,91,93,103,115,117,118,120,126,131,],[3,3,26,26,48,55,26,26,55,26,55,55,55,48,26,26,26,26,26,26,26,26,26,]),'operador_soma':([15,16,33,39,43,52,57,59,67,70,83,91,93,103,115,117,118,120,126,131,],[27,27,27,70,27,27,27,27,27,27,70,27,27,27,27,27,27,27,27,27,]),'repita':([91,115,126,131,],[107,107,107,107,]),'declaracao':([0,9,],[4,19,]),'declaracao_funcao':([0,9,],[11,11,]),'lista_variaveis':([21,77,],[49,92,]),'indice':([5,30,51,],[17,17,17,]),'programa':([0,],[7,]),'chamada_funcao':([15,16,27,33,43,52,57,59,67,70,91,93,103,115,117,118,120,126,131,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'leia':([91,115,126,131,],[100,100,100,100,]),'numero':([15,16,27,33,43,52,57,59,67,70,91,93,103,115,117,118,120,126,131,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'lista_argumentos':([57,],[80,]),'parametro':([18,75,],[44,89,]),'se':([91,115,126,131,],[109,109,109,109,]),'lista_parametros':([18,],[47,]),'expressao_simples':([15,16,33,43,52,57,91,93,103,115,117,118,120,126,131,],[35,35,35,35,78,35,35,35,35,35,35,35,35,35,35,]),'atribuicao':([0,9,15,16,33,43,57,91,93,103,115,117,118,120,126,131,],[8,8,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'lista_declaracoes':([0,],[9,]),'operador_relacional':([35,78,],[59,59,]),'corpo':([76,102,121,129,],[91,115,126,131,]),'expressao_multiplicativa':([15,16,33,43,52,57,59,70,91,93,103,115,117,118,120,126,131,],[37,37,37,37,37,37,37,85,37,37,37,37,37,37,37,37,37,]),'expressao_unaria':([15,16,33,43,52,57,59,67,70,91,93,103,115,117,118,120,126,131,],[38,38,38,38,38,38,38,84,38,38,38,38,38,38,38,38,38,38,]),'expressao_aditiva':([15,16,33,43,52,57,59,91,93,103,115,117,118,120,126,131,],[39,39,39,39,39,39,83,39,39,39,39,39,39,39,39,39,]),'tipo':([0,9,18,75,91,115,126,131,],[12,12,46,46,104,104,104,104,]),'inicializacao_variaveis':([0,9,],[6,6,]),'vazio':([18,57,76,102,121,129,],[45,81,90,90,90,90,]),'cabecalho':([0,9,12,],[13,13,20,]),'fator':([15,16,27,33,43,52,57,59,67,70,91,93,103,115,117,118,120,126,131,],[41,41,56,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'acao':([91,115,126,131,],[101,101,101,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaracoes','programa',1,'p_programa','syntax.py',38),
  ('lista_declaracoes -> lista_declaracoes declaracao','lista_declaracoes',2,'p_lista_declaracoes','syntax.py',45),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista_declaracoes','syntax.py',46),
  ('lista_declaracoes -> error','lista_declaracoes',1,'p_lista_declaracoes','syntax.py',47),
  ('declaracao -> declaracao_variaveis','declaracao',1,'p_declaracao','syntax.py',60),
  ('declaracao -> inicializacao_variaveis','declaracao',1,'p_declaracao','syntax.py',61),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','syntax.py',62),
  ('declaracao_variaveis -> tipo DOIS_PONTOS lista_variaveis','declaracao_variaveis',3,'p_declaracao_variaveis','syntax.py',75),
  ('declaracao_variaveis -> tipo DOIS_PONTOS error','declaracao_variaveis',3,'p_declaracao_variaveis_error','syntax.py',83),
  ('inicializacao_variaveis -> atribuicao','inicializacao_variaveis',1,'p_inicializacao_variaveis','syntax.py',90),
  ('lista_variaveis -> var VIRGULA lista_variaveis','lista_variaveis',3,'p_lista_variaveis','syntax.py',97),
  ('lista_variaveis -> var','lista_variaveis',1,'p_lista_variaveis','syntax.py',98),
  ('var -> ID','var',1,'p_var','syntax.py',111),
  ('var -> ID indice','var',2,'p_var','syntax.py',112),
  ('indice -> indice ABRE_COL expressao FECHA_COL','indice',4,'p_indice','syntax.py',124),
  ('indice -> ABRE_COL expressao FECHA_COL','indice',3,'p_indice','syntax.py',125),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','syntax.py',150),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo','syntax.py',151),
  ('declaracao_funcao -> tipo cabecalho','declaracao_funcao',2,'p_declaracao_funcao','syntax.py',158),
  ('declaracao_funcao -> cabecalho','declaracao_funcao',1,'p_declaracao_funcao','syntax.py',159),
  ('cabecalho -> ID ABRE_PAR lista_parametros FECHA_PAR corpo FIM','cabecalho',6,'p_cabecalho','syntax.py',171),
  ('lista_parametros -> lista_parametros VIRGULA parametro','lista_parametros',3,'p_lista_parametros','syntax.py',188),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','syntax.py',189),
  ('lista_parametros -> vazio','lista_parametros',1,'p_lista_parametros','syntax.py',190),
  ('parametro -> tipo DOIS_PONTOS ID','parametro',3,'p_parametro1','syntax.py',203),
  ('parametro -> parametro ABRE_COL FECHA_COL','parametro',3,'p_parametro2','syntax.py',211),
  ('corpo -> corpo acao','corpo',2,'p_corpo','syntax.py',218),
  ('corpo -> vazio','corpo',1,'p_corpo','syntax.py',219),
  ('acao -> expressao','acao',1,'p_acao','syntax.py',229),
  ('acao -> declaracao_variaveis','acao',1,'p_acao','syntax.py',230),
  ('acao -> se','acao',1,'p_acao','syntax.py',231),
  ('acao -> repita','acao',1,'p_acao','syntax.py',232),
  ('acao -> leia','acao',1,'p_acao','syntax.py',233),
  ('acao -> escreva','acao',1,'p_acao','syntax.py',234),
  ('acao -> retorna','acao',1,'p_acao','syntax.py',235),
  ('acao -> error','acao',1,'p_acao','syntax.py',236),
  ('se -> SE expressao ENTAO corpo FIM','se',5,'p_se','syntax.py',244),
  ('se -> SE expressao ENTAO corpo SENAO corpo FIM','se',7,'p_se','syntax.py',245),
  ('repita -> REPITA corpo ATE expressao','repita',4,'p_repita','syntax.py',270),
  ('atribuicao -> var ATRIBUT expressao','atribuicao',3,'p_atribuicao','syntax.py',285),
  ('leia -> LEIA ABRE_PAR ID FECHA_PAR','leia',4,'p_leia','syntax.py',294),
  ('escreva -> ESCREVA ABRE_PAR expressao FECHA_PAR','escreva',4,'p_escreva','syntax.py',301),
  ('retorna -> RETORNA ABRE_PAR expressao FECHA_PAR','retorna',4,'p_retorna','syntax.py',308),
  ('expressao -> expressao_logica','expressao',1,'p_expressao','syntax.py',315),
  ('expressao -> atribuicao','expressao',1,'p_expressao','syntax.py',316),
  ('expressao_logica -> expressao_simples','expressao_logica',1,'p_expressao_logica','syntax.py',323),
  ('expressao_logica -> expressao_logica operador_logico expressao_simples','expressao_logica',3,'p_expressao_logica','syntax.py',324),
  ('expressao_simples -> expressao_aditiva','expressao_simples',1,'p_expressao_simples','syntax.py',337),
  ('expressao_simples -> expressao_simples operador_relacional expressao_aditiva','expressao_simples',3,'p_expressao_simples','syntax.py',338),
  ('expressao_aditiva -> expressao_multiplicativa','expressao_aditiva',1,'p_expressao_aditiva','syntax.py',350),
  ('expressao_aditiva -> expressao_aditiva operador_soma expressao_multiplicativa','expressao_aditiva',3,'p_expressao_aditiva','syntax.py',351),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao_multiplicativa','syntax.py',363),
  ('expressao_multiplicativa -> expressao_multiplicativa operador_multiplicacao expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','syntax.py',364),
  ('expressao_unaria -> fator','expressao_unaria',1,'p_expressao_unaria','syntax.py',377),
  ('expressao_unaria -> operador_soma fator','expressao_unaria',2,'p_expressao_unaria','syntax.py',378),
  ('operador_relacional -> MENOR','operador_relacional',1,'p_operador_relacional','syntax.py',390),
  ('operador_relacional -> MAIOR','operador_relacional',1,'p_operador_relacional','syntax.py',391),
  ('operador_relacional -> IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',392),
  ('operador_relacional -> DIFERENCA','operador_relacional',1,'p_operador_relacional','syntax.py',393),
  ('operador_relacional -> MENOR_IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',394),
  ('operador_relacional -> MAIOR_IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',395),
  ('operador_relacional -> NEGACAO','operador_relacional',1,'p_operador_relacional','syntax.py',396),
  ('operador_logico -> E_LOGICO','operador_logico',1,'p_operador_logico','syntax.py',403),
  ('operador_logico -> OU_LOGICO','operador_logico',1,'p_operador_logico','syntax.py',404),
  ('operador_soma -> SOMA','operador_soma',1,'p_operador_soma','syntax.py',413),
  ('operador_soma -> SUB','operador_soma',1,'p_operador_soma','syntax.py',414),
  ('operador_multiplicacao -> MULT','operador_multiplicacao',1,'p_operador_multiplicacao','syntax.py',428),
  ('operador_multiplicacao -> DIVISAO','operador_multiplicacao',1,'p_operador_multiplicacao','syntax.py',429),
  ('fator -> ABRE_COL expressao FECHA_COL','fator',3,'p_fator','syntax.py',436),
  ('fator -> var','fator',1,'p_fator','syntax.py',437),
  ('fator -> chamada_funcao','fator',1,'p_fator','syntax.py',438),
  ('fator -> numero','fator',1,'p_fator','syntax.py',439),
  ('numero -> INTEIRO','numero',1,'p_numero','syntax.py',450),
  ('numero -> FLUTUANTE','numero',1,'p_numero','syntax.py',451),
  ('numero -> NOTACAO_CIENTIFICA','numero',1,'p_numero','syntax.py',452),
  ('chamada_funcao -> ID ABRE_PAR lista_argumentos FECHA_PAR','chamada_funcao',4,'p_chamada_funcao','syntax.py',459),
  ('lista_argumentos -> lista_argumentos VIRGULA expressao','lista_argumentos',3,'p_lista_argumentos','syntax.py',467),
  ('lista_argumentos -> expressao','lista_argumentos',1,'p_lista_argumentos','syntax.py',468),
  ('lista_argumentos -> vazio','lista_argumentos',1,'p_lista_argumentos','syntax.py',469),
  ('vazio -> <empty>','vazio',0,'p_vazio','syntax.py',480),
]
