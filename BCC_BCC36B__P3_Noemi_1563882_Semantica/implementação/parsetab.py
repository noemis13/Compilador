
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALNEGACAOMENOR_IGUALMAIORMAIOR_IGUALMENORE_LOGICOOU_LOGICOleftSOMASUBleftMULTDIVISAODIVISAO MULT VIRGULA ATRIBUT MENOR MAIOR IGUAL MENOR_IGUAL MAIOR_IGUAL ABRE_PAR FECHA_PAR DOIS_PONTOS SOMA SUB DIFERENCA ABRE_COL FECHA_COL NOTACAO_CIENTIFICA ID E_LOGICO OU_LOGICO NEGACAO SENAO ENTAO REPITA LEIA ESCREVA FIM ATE INTEIRO FLUTUANTE SE RETORNA\n        programa : lista_declaracoes\n                     \n        lista_declaracoes : lista_declaracoes declaracao\n                          | declaracao\n                         | error\n        \n        declaracao : declaracao_variaveis\n                   | inicializacao_variaveis\n                   | declaracao_funcao\n        \n        declaracao_variaveis : tipo DOIS_PONTOS lista_variaveis\n        \n        declaracao_variaveis : tipo DOIS_PONTOS error\n        \n        inicializacao_variaveis : atribuicao\n        \n        lista_variaveis : var VIRGULA lista_variaveis\n                        | var\n        \n        var : ID\n            | ID indice\n        \n        indice : indice ABRE_COL expressao FECHA_COL\n               | ABRE_COL expressao FECHA_COL\n        \n        tipo : INTEIRO\n\t     | FLUTUANTE\n        \n        declaracao_funcao : tipo cabecalho\n                          | cabecalho\n        \n        cabecalho : ID ABRE_PAR lista_parametros FECHA_PAR corpo FIM\n        \n        lista_parametros : lista_parametros VIRGULA parametro\n                         | parametro\n                         | vazio\n        \n        parametro : tipo DOIS_PONTOS ID\n        \n        parametro : parametro ABRE_COL FECHA_COL\n        \n        corpo : corpo acao\n              | vazio\n        \n        acao : expressao\n                    | declaracao_variaveis\n                    | se\n                    | repita\n                    | leia\n                    | escreva\n                    | retorna\n                    | error\n\n        \n            se : SE expressao ENTAO corpo FIM\n                | SE expressao ENTAO corpo SENAO corpo FIM\n        \n            repita : REPITA corpo ATE expressao\n        \n            atribuicao : var ATRIBUT expressao\n        \n            leia : LEIA ABRE_PAR ID FECHA_PAR\n        \n            escreva : ESCREVA ABRE_PAR expressao FECHA_PAR\n        \n            retorna : RETORNA ABRE_PAR expressao FECHA_PAR\n        \n            expressao : expressao_logica\n                        | atribuicao\n        \n            expressao_logica : expressao_simples\n                             | expressao_logica operador_logico expressao_simples\n        \n            expressao_simples : expressao_aditiva\n                              | expressao_simples operador_relacional expressao_aditiva\n        \n            expressao_aditiva : expressao_multiplicativa\n                                | expressao_aditiva operador_soma expressao_multiplicativa\n        \n           expressao_multiplicativa : expressao_unaria\n                           | expressao_multiplicativa operador_multiplicacao expressao_unaria\n\n        \n            expressao_unaria : fator\n                            | operador_soma fator\n        \n            operador_relacional : MENOR\n                                | MAIOR\n                                | IGUAL\n                                | DIFERENCA\n                                | MENOR_IGUAL\n                                | MAIOR_IGUAL\n                                | NEGACAO\n        \n            operador_logico : E_LOGICO\n                            | OU_LOGICO\n\n        \n            operador_soma : SOMA\n                          | SUB\n\n        \n            operador_multiplicacao : MULT\n                                   | DIVISAO\n        \n            fator : ABRE_COL expressao FECHA_COL\n                  | var\n                  | chamada_funcao\n                  | numero\n        \n            numero : INTEIRO\n                   | FLUTUANTE\n                   | NOTACAO_CIENTIFICA\n        \n            chamada_funcao : ID ABRE_PAR lista_argumentos FECHA_PAR\n        \n            lista_argumentos : lista_argumentos VIRGULA expressao\n                            | expressao\n                            | vazio\n        \n            vazio :\n        '
    
_lr_action_items = {'INTEIRO':([0,2,3,6,7,8,9,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,83,84,85,86,89,90,92,93,94,96,97,98,99,100,101,102,103,104,106,107,109,110,111,114,116,118,119,122,124,125,126,127,128,129,130,131,132,],[1,-6,-7,-20,-5,-4,1,-10,-3,-19,-2,27,1,-14,27,-9,-12,-13,-8,-73,-52,-44,-54,-71,27,-13,27,-74,-75,-70,-46,-48,-66,-65,-45,-50,-72,27,-40,-63,27,-64,-16,-70,-55,27,-56,-57,-60,27,-59,-61,-62,-58,27,-67,-68,27,1,-80,-11,-47,-69,-49,-51,-53,107,-28,-15,27,-76,-33,-36,-21,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,27,107,27,27,27,-80,-39,-41,-42,107,-43,-37,-80,107,-38,]),'ATRIBUT':([11,12,21,34,38,56,92,],[-13,22,-14,-13,22,-16,-15,]),'ABRE_COL':([11,19,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,102,103,104,106,107,109,110,111,114,116,118,119,122,124,125,126,127,128,129,130,131,132,],[19,35,50,35,-9,-12,19,-8,-73,-52,-44,-54,-71,35,19,35,-74,-75,-70,-46,-48,-66,-65,-45,-50,-72,76,35,-40,-63,35,-64,-16,-70,-55,35,-56,-57,-60,35,-59,-61,-62,-58,35,-67,-68,35,-80,-11,-47,-69,-49,-51,-53,-25,76,35,-28,-26,-15,35,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,35,35,35,35,35,-80,-39,-41,-42,35,-43,-37,-80,35,-38,]),'MAIOR_IGUAL':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,66,-48,-50,-72,-16,-70,-55,66,-69,-49,-51,-53,-15,-76,-74,-73,]),'FECHA_COL':([21,27,28,29,30,31,32,34,36,37,38,39,40,43,44,45,51,56,57,58,60,76,77,79,83,84,85,86,92,94,],[-14,-73,-52,-44,-54,56,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,83,91,92,-47,-69,-49,-51,-53,-15,-76,]),'NEGACAO':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,67,-48,-50,-72,-16,-70,-55,67,-69,-49,-51,-53,-15,-76,-74,-73,]),'IGUAL':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,68,-48,-50,-72,-16,-70,-55,68,-69,-49,-51,-53,-15,-76,-74,-73,]),'MENOR_IGUAL':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,63,-48,-50,-72,-16,-70,-55,63,-69,-49,-51,-53,-15,-76,-74,-73,]),'DIVISAO':([21,27,28,30,32,34,36,37,38,44,45,56,57,58,83,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,71,-72,-16,-70,-55,-69,71,-53,-15,-76,-74,-73,]),'ABRE_PAR':([11,17,34,105,108,112,],[20,20,59,115,116,118,]),'error':([0,15,21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,122,124,125,126,127,128,129,130,131,132,],[8,23,-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,97,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,97,-80,-39,-41,-42,97,-43,-37,-80,97,-38,]),'OU_LOGICO':([21,27,28,29,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,55,-54,-71,-13,-74,-75,-70,-46,-48,-50,-72,-16,-70,-55,-47,-69,-49,-51,-53,-15,-76,-74,-73,]),'FIM':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,102,103,104,106,107,109,110,122,124,125,126,127,128,129,130,131,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,98,-28,-15,-76,-33,-36,-32,-74,-27,-29,-30,-31,-73,-34,-35,-80,-39,-41,-42,129,-43,-37,-80,132,-38,]),'LEIA':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,122,124,125,126,127,128,129,130,131,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,105,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,105,-80,-39,-41,-42,105,-43,-37,-80,105,-38,]),'E_LOGICO':([21,27,28,29,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,53,-54,-71,-13,-74,-75,-70,-46,-48,-50,-72,-16,-70,-55,-47,-69,-49,-51,-53,-15,-76,-74,-73,]),'FECHA_PAR':([20,21,27,28,29,30,32,34,36,37,38,39,40,43,44,45,47,48,49,51,56,57,58,59,79,80,81,82,83,84,85,86,87,88,91,92,94,113,120,121,123,],[-80,-14,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,75,-23,-24,-40,-16,-70,-55,-80,-47,-79,-78,94,-69,-49,-51,-53,-25,-22,-26,-15,-76,-77,125,126,128,]),'SENAO':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,78,79,83,84,85,86,90,92,94,96,97,99,100,102,103,104,106,107,109,110,122,124,125,126,127,128,129,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-11,-47,-69,-49,-51,-53,-28,-15,-76,-33,-36,-32,-74,-27,-29,-30,-31,-73,-34,-35,-80,-39,-41,-42,130,-43,-37,-38,]),'ESCREVA':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,122,124,125,126,127,128,129,130,131,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,108,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,108,-80,-39,-41,-42,108,-43,-37,-80,108,-38,]),'FLUTUANTE':([0,2,3,6,7,8,9,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,83,84,85,86,89,90,92,93,94,96,97,98,99,100,101,102,103,104,106,107,109,110,111,114,116,118,119,122,124,125,126,127,128,129,130,131,132,],[10,-6,-7,-20,-5,-4,10,-10,-3,-19,-2,36,10,-14,36,-9,-12,-13,-8,-73,-52,-44,-54,-71,36,-13,36,-74,-75,-70,-46,-48,-66,-65,-45,-50,-72,36,-40,-63,36,-64,-16,-70,-55,36,-56,-57,-60,36,-59,-61,-62,-58,36,-67,-68,36,10,-80,-11,-47,-69,-49,-51,-53,100,-28,-15,36,-76,-33,-36,-21,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,36,100,36,36,36,-80,-39,-41,-42,100,-43,-37,-80,100,-38,]),'MULT':([21,27,28,30,32,34,36,37,38,44,45,56,57,58,83,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,70,-72,-16,-70,-55,-69,70,-53,-15,-76,-74,-73,]),'$end':([2,3,4,6,7,8,9,13,14,16,18,21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,78,79,83,84,85,86,92,94,98,],[-6,-7,0,-20,-5,-4,-1,-10,-3,-19,-2,-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-11,-47,-69,-49,-51,-53,-15,-76,-21,]),'VIRGULA':([20,21,24,25,27,28,29,30,32,34,36,37,38,39,40,43,44,45,47,48,49,51,56,57,58,59,79,80,81,82,83,84,85,86,87,88,91,92,94,113,],[-80,-14,52,-13,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,74,-23,-24,-40,-16,-70,-55,-80,-47,-79,-78,93,-69,-49,-51,-53,-25,-22,-26,-15,-76,-77,]),'DOIS_PONTOS':([1,5,10,46,95,100,107,],[-17,15,-18,73,15,-18,-17,]),'ENTAO':([21,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,79,83,84,85,86,92,94,117,],[-14,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-47,-69,-49,-51,-53,-15,-76,122,]),'ID':([0,1,2,3,5,6,7,8,9,10,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,83,84,85,86,89,90,92,93,94,96,97,98,99,100,101,102,103,104,106,107,109,110,111,114,115,116,118,119,122,124,125,126,127,128,129,130,131,132,],[11,-17,-6,-7,17,-20,-5,-4,11,-18,-10,-3,25,-19,-2,34,-14,34,-9,-12,-13,-8,-73,-52,-44,-54,-71,34,-13,34,-74,-75,-70,-46,-48,-66,-65,-45,-50,-72,34,-40,25,-63,34,-64,-16,-70,-55,34,-56,-57,-60,34,-59,-61,-62,-58,34,-67,-68,34,87,-80,-11,-47,-69,-49,-51,-53,34,-28,-15,34,-76,-33,-36,-21,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,34,34,120,34,34,34,-80,-39,-41,-42,34,-43,-37,-80,34,-38,]),'DIFERENCA':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,65,-48,-50,-72,-16,-70,-55,65,-69,-49,-51,-53,-15,-76,-74,-73,]),'ATE':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,78,79,83,84,85,86,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,124,125,126,128,129,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-11,-47,-69,-49,-51,-53,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,119,-39,-41,-42,-43,-37,-38,]),'SE':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,122,124,125,126,127,128,129,130,131,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,111,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,111,-80,-39,-41,-42,111,-43,-37,-80,111,-38,]),'SUB':([19,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,78,79,83,84,85,86,89,90,92,93,94,96,97,99,100,101,102,103,104,106,107,109,110,111,114,116,118,119,122,124,125,126,127,128,129,130,131,132,],[41,-14,41,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,41,-74,-75,-70,-46,41,-66,-65,-45,-50,-72,41,-40,-63,41,-64,-16,-70,-55,41,-56,-57,-60,41,-59,-61,-62,-58,41,-67,-68,41,-80,-11,-47,-69,41,-51,-53,41,-28,-15,41,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,41,41,41,41,41,-80,-39,-41,-42,41,-43,-37,-80,41,-38,]),'REPITA':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,122,124,125,126,127,128,129,130,131,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,101,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,101,-80,-39,-41,-42,101,-43,-37,-80,101,-38,]),'SOMA':([19,21,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,78,79,83,84,85,86,89,90,92,93,94,96,97,99,100,101,102,103,104,106,107,109,110,111,114,116,118,119,122,124,125,126,127,128,129,130,131,132,],[42,-14,42,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,42,-74,-75,-70,-46,42,-66,-65,-45,-50,-72,42,-40,-63,42,-64,-16,-70,-55,42,-56,-57,-60,42,-59,-61,-62,-58,42,-67,-68,42,-80,-11,-47,-69,42,-51,-53,42,-28,-15,42,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,42,42,42,42,42,-80,-39,-41,-42,42,-43,-37,-80,42,-38,]),'MAIOR':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,62,-48,-50,-72,-16,-70,-55,62,-69,-49,-51,-53,-15,-76,-74,-73,]),'NOTACAO_CIENTIFICA':([19,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,78,79,83,84,85,86,89,90,92,93,94,96,97,99,100,101,102,103,104,106,107,109,110,111,114,116,118,119,122,124,125,126,127,128,129,130,131,132,],[37,-14,37,-9,-12,-13,-8,-73,-52,-44,-54,-71,37,-13,37,-74,-75,-70,-46,-48,-66,-65,-45,-50,-72,37,-40,-63,37,-64,-16,-70,-55,37,-56,-57,-60,37,-59,-61,-62,-58,37,-67,-68,37,-80,-11,-47,-69,-49,-51,-53,37,-28,-15,37,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,37,37,37,37,37,-80,-39,-41,-42,37,-43,-37,-80,37,-38,]),'MENOR':([21,27,28,30,32,34,36,37,38,39,40,44,45,56,57,58,79,83,84,85,86,92,94,100,107,],[-14,-73,-52,-54,-71,-13,-74,-75,-70,61,-48,-50,-72,-16,-70,-55,61,-69,-49,-51,-53,-15,-76,-74,-73,]),'RETORNA':([21,23,24,25,26,27,28,29,30,32,34,36,37,38,39,40,43,44,45,51,56,57,58,75,78,79,83,84,85,86,89,90,92,94,96,97,99,100,101,102,103,104,106,107,109,110,114,122,124,125,126,127,128,129,130,131,132,],[-14,-9,-12,-13,-8,-73,-52,-44,-54,-71,-13,-74,-75,-70,-46,-48,-45,-50,-72,-40,-16,-70,-55,-80,-11,-47,-69,-49,-51,-53,112,-28,-15,-76,-33,-36,-32,-74,-80,-27,-29,-30,-31,-73,-34,-35,112,-80,-39,-41,-42,112,-43,-37,-80,112,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lista_parametros':([20,],[47,]),'tipo':([0,9,20,74,89,114,127,131,],[5,5,46,46,95,95,95,95,]),'operador_relacional':([39,79,],[64,64,]),'declaracao_funcao':([0,9,],[3,3,]),'expressao_logica':([19,22,35,50,59,89,93,111,114,116,118,119,127,131,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'inicializacao_variaveis':([0,9,],[2,2,]),'cabecalho':([0,5,9,],[6,16,6,]),'atribuicao':([0,9,19,22,35,50,59,89,93,111,114,116,118,119,127,131,],[13,13,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'parametro':([20,74,],[48,88,]),'acao':([89,114,127,131,],[102,102,102,102,]),'vazio':([20,59,75,101,122,130,],[49,80,90,90,90,90,]),'expressao':([19,22,35,50,59,89,93,111,114,116,118,119,127,131,],[31,51,60,77,81,103,113,117,103,121,123,124,103,103,]),'leia':([89,114,127,131,],[96,96,96,96,]),'chamada_funcao':([19,22,33,35,50,54,59,64,69,72,89,93,111,114,116,118,119,127,131,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operador_soma':([19,22,35,40,50,54,59,64,69,72,84,89,93,111,114,116,118,119,127,131,],[33,33,33,69,33,33,33,33,33,33,69,33,33,33,33,33,33,33,33,33,]),'declaracao_variaveis':([0,9,89,114,127,131,],[7,7,104,104,104,104,]),'expressao_unaria':([19,22,35,50,54,59,64,69,72,89,93,111,114,116,118,119,127,131,],[28,28,28,28,28,28,28,28,86,28,28,28,28,28,28,28,28,28,]),'lista_declaracoes':([0,],[9,]),'se':([89,114,127,131,],[106,106,106,106,]),'lista_variaveis':([15,52,],[26,78,]),'repita':([89,114,127,131,],[99,99,99,99,]),'escreva':([89,114,127,131,],[109,109,109,109,]),'operador_logico':([29,],[54,]),'retorna':([89,114,127,131,],[110,110,110,110,]),'lista_argumentos':([59,],[82,]),'indice':([11,25,34,],[21,21,21,]),'programa':([0,],[4,]),'var':([0,9,15,19,22,33,35,50,52,54,59,64,69,72,89,93,111,114,116,118,119,127,131,],[12,12,24,38,38,57,38,38,24,57,38,57,57,57,38,38,38,38,38,38,38,38,38,]),'expressao_simples':([19,22,35,50,54,59,89,93,111,114,116,118,119,127,131,],[39,39,39,39,79,39,39,39,39,39,39,39,39,39,39,]),'expressao_aditiva':([19,22,35,50,54,59,64,89,93,111,114,116,118,119,127,131,],[40,40,40,40,40,40,84,40,40,40,40,40,40,40,40,40,]),'fator':([19,22,33,35,50,54,59,64,69,72,89,93,111,114,116,118,119,127,131,],[30,30,58,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'declaracao':([0,9,],[14,18,]),'corpo':([75,101,122,130,],[89,114,127,131,]),'expressao_multiplicativa':([19,22,35,50,54,59,64,69,89,93,111,114,116,118,119,127,131,],[44,44,44,44,44,44,44,85,44,44,44,44,44,44,44,44,44,]),'operador_multiplicacao':([44,85,],[72,72,]),'numero':([19,22,33,35,50,54,59,64,69,72,89,93,111,114,116,118,119,127,131,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaracoes','programa',1,'p_programa','syntax.py',38),
  ('lista_declaracoes -> lista_declaracoes declaracao','lista_declaracoes',2,'p_lista_declaracoes','syntax.py',46),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista_declaracoes','syntax.py',47),
  ('lista_declaracoes -> error','lista_declaracoes',1,'p_lista_declaracoes','syntax.py',48),
  ('declaracao -> declaracao_variaveis','declaracao',1,'p_declaracao','syntax.py',63),
  ('declaracao -> inicializacao_variaveis','declaracao',1,'p_declaracao','syntax.py',64),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','syntax.py',65),
  ('declaracao_variaveis -> tipo DOIS_PONTOS lista_variaveis','declaracao_variaveis',3,'p_declaracao_variaveis','syntax.py',78),
  ('declaracao_variaveis -> tipo DOIS_PONTOS error','declaracao_variaveis',3,'p_declaracao_variaveis_error','syntax.py',86),
  ('inicializacao_variaveis -> atribuicao','inicializacao_variaveis',1,'p_inicializacao_variaveis','syntax.py',95),
  ('lista_variaveis -> var VIRGULA lista_variaveis','lista_variaveis',3,'p_lista_variaveis','syntax.py',102),
  ('lista_variaveis -> var','lista_variaveis',1,'p_lista_variaveis','syntax.py',103),
  ('var -> ID','var',1,'p_var','syntax.py',117),
  ('var -> ID indice','var',2,'p_var','syntax.py',118),
  ('indice -> indice ABRE_COL expressao FECHA_COL','indice',4,'p_indice','syntax.py',130),
  ('indice -> ABRE_COL expressao FECHA_COL','indice',3,'p_indice','syntax.py',131),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','syntax.py',156),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo','syntax.py',157),
  ('declaracao_funcao -> tipo cabecalho','declaracao_funcao',2,'p_declaracao_funcao','syntax.py',164),
  ('declaracao_funcao -> cabecalho','declaracao_funcao',1,'p_declaracao_funcao','syntax.py',165),
  ('cabecalho -> ID ABRE_PAR lista_parametros FECHA_PAR corpo FIM','cabecalho',6,'p_cabecalho','syntax.py',177),
  ('lista_parametros -> lista_parametros VIRGULA parametro','lista_parametros',3,'p_lista_parametros','syntax.py',194),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','syntax.py',195),
  ('lista_parametros -> vazio','lista_parametros',1,'p_lista_parametros','syntax.py',196),
  ('parametro -> tipo DOIS_PONTOS ID','parametro',3,'p_parametro1','syntax.py',212),
  ('parametro -> parametro ABRE_COL FECHA_COL','parametro',3,'p_parametro2','syntax.py',220),
  ('corpo -> corpo acao','corpo',2,'p_corpo','syntax.py',227),
  ('corpo -> vazio','corpo',1,'p_corpo','syntax.py',228),
  ('acao -> expressao','acao',1,'p_acao','syntax.py',238),
  ('acao -> declaracao_variaveis','acao',1,'p_acao','syntax.py',239),
  ('acao -> se','acao',1,'p_acao','syntax.py',240),
  ('acao -> repita','acao',1,'p_acao','syntax.py',241),
  ('acao -> leia','acao',1,'p_acao','syntax.py',242),
  ('acao -> escreva','acao',1,'p_acao','syntax.py',243),
  ('acao -> retorna','acao',1,'p_acao','syntax.py',244),
  ('acao -> error','acao',1,'p_acao','syntax.py',245),
  ('se -> SE expressao ENTAO corpo FIM','se',5,'p_se','syntax.py',253),
  ('se -> SE expressao ENTAO corpo SENAO corpo FIM','se',7,'p_se','syntax.py',254),
  ('repita -> REPITA corpo ATE expressao','repita',4,'p_repita','syntax.py',279),
  ('atribuicao -> var ATRIBUT expressao','atribuicao',3,'p_atribuicao','syntax.py',294),
  ('leia -> LEIA ABRE_PAR ID FECHA_PAR','leia',4,'p_leia','syntax.py',303),
  ('escreva -> ESCREVA ABRE_PAR expressao FECHA_PAR','escreva',4,'p_escreva','syntax.py',310),
  ('retorna -> RETORNA ABRE_PAR expressao FECHA_PAR','retorna',4,'p_retorna','syntax.py',317),
  ('expressao -> expressao_logica','expressao',1,'p_expressao','syntax.py',324),
  ('expressao -> atribuicao','expressao',1,'p_expressao','syntax.py',325),
  ('expressao_logica -> expressao_simples','expressao_logica',1,'p_expressao_logica','syntax.py',332),
  ('expressao_logica -> expressao_logica operador_logico expressao_simples','expressao_logica',3,'p_expressao_logica','syntax.py',333),
  ('expressao_simples -> expressao_aditiva','expressao_simples',1,'p_expressao_simples','syntax.py',346),
  ('expressao_simples -> expressao_simples operador_relacional expressao_aditiva','expressao_simples',3,'p_expressao_simples','syntax.py',347),
  ('expressao_aditiva -> expressao_multiplicativa','expressao_aditiva',1,'p_expressao_aditiva','syntax.py',359),
  ('expressao_aditiva -> expressao_aditiva operador_soma expressao_multiplicativa','expressao_aditiva',3,'p_expressao_aditiva','syntax.py',360),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao_multiplicativa','syntax.py',372),
  ('expressao_multiplicativa -> expressao_multiplicativa operador_multiplicacao expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','syntax.py',373),
  ('expressao_unaria -> fator','expressao_unaria',1,'p_expressao_unaria','syntax.py',386),
  ('expressao_unaria -> operador_soma fator','expressao_unaria',2,'p_expressao_unaria','syntax.py',387),
  ('operador_relacional -> MENOR','operador_relacional',1,'p_operador_relacional','syntax.py',399),
  ('operador_relacional -> MAIOR','operador_relacional',1,'p_operador_relacional','syntax.py',400),
  ('operador_relacional -> IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',401),
  ('operador_relacional -> DIFERENCA','operador_relacional',1,'p_operador_relacional','syntax.py',402),
  ('operador_relacional -> MENOR_IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',403),
  ('operador_relacional -> MAIOR_IGUAL','operador_relacional',1,'p_operador_relacional','syntax.py',404),
  ('operador_relacional -> NEGACAO','operador_relacional',1,'p_operador_relacional','syntax.py',405),
  ('operador_logico -> E_LOGICO','operador_logico',1,'p_operador_logico','syntax.py',412),
  ('operador_logico -> OU_LOGICO','operador_logico',1,'p_operador_logico','syntax.py',413),
  ('operador_soma -> SOMA','operador_soma',1,'p_operador_soma','syntax.py',422),
  ('operador_soma -> SUB','operador_soma',1,'p_operador_soma','syntax.py',423),
  ('operador_multiplicacao -> MULT','operador_multiplicacao',1,'p_operador_multiplicacao','syntax.py',437),
  ('operador_multiplicacao -> DIVISAO','operador_multiplicacao',1,'p_operador_multiplicacao','syntax.py',438),
  ('fator -> ABRE_COL expressao FECHA_COL','fator',3,'p_fator','syntax.py',445),
  ('fator -> var','fator',1,'p_fator','syntax.py',446),
  ('fator -> chamada_funcao','fator',1,'p_fator','syntax.py',447),
  ('fator -> numero','fator',1,'p_fator','syntax.py',448),
  ('numero -> INTEIRO','numero',1,'p_numero','syntax.py',459),
  ('numero -> FLUTUANTE','numero',1,'p_numero','syntax.py',460),
  ('numero -> NOTACAO_CIENTIFICA','numero',1,'p_numero','syntax.py',461),
  ('chamada_funcao -> ID ABRE_PAR lista_argumentos FECHA_PAR','chamada_funcao',4,'p_chamada_funcao','syntax.py',468),
  ('lista_argumentos -> lista_argumentos VIRGULA expressao','lista_argumentos',3,'p_lista_argumentos','syntax.py',476),
  ('lista_argumentos -> expressao','lista_argumentos',1,'p_lista_argumentos','syntax.py',477),
  ('lista_argumentos -> vazio','lista_argumentos',1,'p_lista_argumentos','syntax.py',478),
  ('vazio -> <empty>','vazio',0,'p_vazio','syntax.py',489),
]
